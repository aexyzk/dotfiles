{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/aexyzk/.vscode-oss/extensions/extensions.json","path":"/home/aexyzk/.vscode-oss/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1705127955508,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"excludeObsolete":true,"validate":true,"productVersion":"1.85.1","productDate":"2023-12-14T20:02:29.406Z","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"shubham-saudolla.lilac","uuid":"1bfca39f-30a9-45e3-8631-027297c85b5c"},"manifest":{"name":"lilac","version":"1.2.7","displayName":"Lilac","description":"A dark theme with pretty pastel colours.","publisher":"shubham-saudolla","repository":"https://github.com/shubham-saudolla/Lilac-Theme.git","license":"MIT","icon":"icon.png","galleryBanner":{"color":"#000000","theme":"dark"},"keywords":["lilac","pastel","dark","theme","aesthetic","goth","pink","synthwave","vaporwave","contrast","pretty"],"engines":{"vscode":"^1.33.0"},"categories":["Themes"],"contributes":{"themes":[{"label":"Lilac","uiTheme":"vs-dark","path":"themes/Lilac-color-theme.json"}]}},"location":{"$mid":1,"path":"/home/aexyzk/.vscode-oss/extensions/shubham-saudolla.lilac-1.2.7-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"1bfca39f-30a9-45e3-8631-027297c85b5c","publisherId":"78fe18ff-9010-47d7-97c6-9f44b97405c2","publisherDisplayName":"shubham-saudolla","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1705126498057,"pinned":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-python.python","uuid":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5"},"manifest":{"name":"python","displayName":"Python","description":"IntelliSense (Pylance), Linting, Debugging (multi-threaded, remote), code formatting, refactoring, unit tests, and more.","version":"2023.22.1","featureFlags":{"usingNewInterpreterStorage":true},"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense with Pylance is supported. Cannot execute Python with untrusted files."},"virtualWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense supported."}},"publisher":"ms-python","enabledApiProposals":["contribEditorContentMenu","quickPickSortByLabel","testObserver","quickPickItemTooltip","saveEditor","terminalDataWriteEvent","terminalExecuteCommandEvent"],"author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-python"},"bugs":{"url":"https://github.com/Microsoft/vscode-python/issues"},"qna":"https://github.com/microsoft/vscode-python/discussions/categories/q-a","icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"engines":{"vscode":"^1.82.0"},"enableTelemetry":false,"keywords":["python","django","unittest","multi-root ready"],"categories":["Programming Languages","Debuggers","Linters","Formatters","Other","Data Science","Machine Learning"],"activationEvents":["onDebugInitialConfigurations","onLanguage:python","onDebugDynamicConfigurations:python","onDebugResolve:python","workspaceContains:mspythonconfig.json","workspaceContains:pyproject.toml","workspaceContains:Pipfile","workspaceContains:setup.py","workspaceContains:requirements.txt","workspaceContains:manage.py","workspaceContains:app.py"],"main":"./out/client/extension","browser":"./dist/extension.browser.js","l10n":"./l10n","contributes":{"walkthroughs":[{"id":"pythonWelcome","title":"Get Started with Python Development","description":"Your first steps to set up a Python project with all the powerful tools and features that the Python extension has to offer!","when":"workspacePlatform != webworker","steps":[{"id":"python.createPythonFile","title":"Create a Python file","description":"[Open](command:toSide:workbench.action.files.openFile) or [create](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D) a Python file - make sure to save it as \".py\".\n[Create Python File](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."},"when":""},{"id":"python.installPythonWin8","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python [from python.org](https://www.python.org/downloads).\n\n[Install Python](https://www.python.org/downloads)\n","media":{"markdown":"resources/walkthrough/install-python-windows-8.md"},"when":"workspacePlatform == windows && showInstallPythonTile"},{"id":"python.installPythonMac","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via Brew](command:python.installPythonOnMac)\n","media":{"markdown":"resources/walkthrough/install-python-macos.md"},"when":"workspacePlatform == mac && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.installPythonLinux","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via terminal](command:python.installPythonOnLinux)\n","media":{"markdown":"resources/walkthrough/install-python-linux.md"},"when":"workspacePlatform == linux && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.selectInterpreter","title":"Select a Python Interpreter","description":"Choose which Python interpreter/environment you want to use for your Python project.\n[Select Python Interpreter](command:python.setInterpreter)\n**Tip**: Run the ``Python: Select Interpreter`` command in the [Command Palette](command:workbench.action.showCommands).","media":{"svg":"resources/walkthrough/python-interpreter.svg","altText":"Selecting a Python interpreter from the status bar"},"when":"workspaceFolderCount == 0"},{"id":"python.createEnvironment","title":"Create a Python Environment ","description":"Create an environment for your Python project.\n[Create Environment](command:python.createEnvironment)\n**Tip**: Run the ``Python: Create Environment`` command in the [Command Palette](command:workbench.action.showCommands).\n 🔍 Check out our [docs](https://aka.ms/pythonenvs) to learn more.","media":{"svg":"resources/walkthrough/create-environment.svg","altText":"Creating a Python environment from the Command Palette"},"when":"workspaceFolderCount > 0"},{"id":"python.runAndDebug","title":"Run and debug your Python file","description":"Open your Python file  and click on the play button on the top right of the editor, or press F5 when on the file and select \"Python File\" to run with the debugger. \n  \n[Learn more](https://code.visualstudio.com/docs/python/python-tutorial#_run-hello-world)","media":{"svg":"resources/walkthrough/rundebug2.svg","altText":"How to run and debug in VS Code with F5 or the play button on the top right."},"when":""},{"id":"python.learnMoreWithDS","title":"Explore more resources","description":"🎨 Explore all the features the Python extension has to offer by looking for \"Python\" in the [Command Palette](command:workbench.action.showCommands). \n 📈 Learn more about getting started with [data science](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) in Python. \n ✨ Take a look at our [Release Notes](https://aka.ms/AA8dxtb) to learn more about the latest features. \n \n[Learn More](https://aka.ms/AA8dqti)","media":{"altText":"Image representing our documentation page and mailing list resources.","svg":"resources/walkthrough/learnmore.svg"},"when":""}]},{"id":"pythonWelcome2","title":"Get Started with Python Development","description":"Your first steps to set up a Python project with all the powerful tools and features that the Python extension has to offer!","when":"false","steps":[{"id":"python.createPythonFolder","title":"Open a Python project folder","description":"[Open](command:workbench.action.files.openFolder) or create a project folder.\n[Open Project Folder](command:workbench.action.files.openFolder)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."},"when":"workspaceFolderCount = 0"},{"id":"python.createPythonFile","title":"Create a Python file","description":"[Open](command:toSide:workbench.action.files.openFile) or [create](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D) a Python file - make sure to save it as \".py\".\n[Create Python File](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."},"when":""},{"id":"python.installPythonWin8","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python [from python.org](https://www.python.org/downloads).\n\n[Install Python](https://www.python.org/downloads)\n","media":{"markdown":"resources/walkthrough/install-python-windows-8.md"},"when":"workspacePlatform == windows && showInstallPythonTile"},{"id":"python.installPythonMac","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via Brew](command:python.installPythonOnMac)\n","media":{"markdown":"resources/walkthrough/install-python-macos.md"},"when":"workspacePlatform == mac && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.installPythonLinux","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via terminal](command:python.installPythonOnLinux)\n","media":{"markdown":"resources/walkthrough/install-python-linux.md"},"when":"workspacePlatform == linux && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.createEnvironment2","title":"Create or select a Python Environment ","description":"Create an environment for your Python project or use [Select Python Interpreter](command:python.setInterpreter) to select an existing one.\n[Create Environment](command:python.createEnvironment)\n**Tip**: Run the ``Python: Create Environment`` command in the [Command Palette](command:workbench.action.showCommands).","media":{"markdown":"resources/walkthrough/environments-info.md"},"when":""},{"id":"python.runAndDebug","title":"Run and debug your Python file","description":"Open your Python file  and click on the play button on the top right of the editor, or press F5 when on the file and select \"Python File\" to run with the debugger. \n  \n[Learn more](https://code.visualstudio.com/docs/python/python-tutorial#_run-hello-world)","media":{"svg":"resources/walkthrough/rundebug2.svg","altText":"How to run and debug in VS Code with F5 or the play button on the top right."},"when":""},{"id":"python.learnMoreWithDS2","title":"Explore more resources","description":"🎨 Explore all the features the Python extension has to offer by looking for \"Python\" in the [Command Palette](command:workbench.action.showCommands). \n 📈 Learn more about getting started with [data science](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) in Python. \n ✨ Take a look at our [Release Notes](https://aka.ms/AA8dxtb) to learn more about the latest features. \n \n[Follow along with the Python Tutorial](https://aka.ms/AA8dqti)","media":{"altText":"Image representing our documentation page and mailing list resources.","svg":"resources/walkthrough/learnmore.svg"},"when":""}]},{"id":"pythonDataScienceWelcome","title":"Get Started with Python for Data Science","description":"Your first steps to getting started with a Data Science project with Python!","when":"false","steps":[{"id":"python.installJupyterExt","title":"Install Jupyter extension","description":"If you haven't already, install the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") to take full advantage of notebooks experiences in VS Code!\n \n[Search Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\")","media":{"svg":"resources/walkthrough/data-science.svg","altText":"Creating a new Jupyter notebook"}},{"id":"python.createNewNotebook","title":"Create or open a Jupyter Notebook","description":"Right click in the file explorer and create a new file with an .ipynb extension. Or, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create New Blank Notebook``.\n[Create new Jupyter Notebook](command:toSide:jupyter.createnewnotebook)\n If you have an existing project, you can also [open a folder](command:workbench.action.files.openFolder) and/or clone a project from GitHub: [clone a Git repository](command:git.clone).","media":{"svg":"resources/walkthrough/create-notebook.svg","altText":"Creating a new Jupyter notebook"},"completionEvents":["onCommand:jupyter.createnewnotebook","onCommand:workbench.action.files.openFolder","onCommand:workbench.action.files.openFileFolder"]},{"id":"python.openInteractiveWindow","title":"Open the Python Interactive Window","description":"The Python Interactive Window is a Python shell where you can execute and view the results of your Python code. You can create cells on a Python file by typing ``#%%``.\n \nTo open the interactive window anytime, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create Interactive Window``.\n[Open Interactive Window](command:jupyter.createnewinteractive)","media":{"svg":"resources/walkthrough/interactive-window.svg","altText":"Opening Python interactive window"},"completionEvents":["onCommand:jupyter.createnewinteractive"]},{"id":"python.dataScienceLearnMore","title":"Find out more!","description":"📒 Take a look into the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") features, by looking for \"Jupyter\" in the [Command Palette](command:workbench.action.showCommands). \n 🏃🏻 Find out more features in our [Tutorials](https://aka.ms/AAdjzpd).  \n[Learn more](https://aka.ms/AAdar6q)","media":{"svg":"resources/walkthrough/learnmore.svg","altText":"Image representing our documentation page and mailing list resources."}}]}],"breakpoints":[{"language":"html"},{"language":"jinja"},{"language":"python"},{"language":"django-html"},{"language":"django-txt"}],"commands":[{"title":"New Python File","shortTitle":"Python File","category":"Python","command":"python.createNewFile"},{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting"},{"category":"Python","command":"python.configureTests","title":"Configure Tests"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment..."},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment..."},{"category":"Python","command":"python.enableSourceMapSupport","title":"Enable Source Map Support For Extension Debugging"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal"},{"category":"Python","command":"python.debugInTerminal","icon":"$(debug-alt)","title":"Debug Python File"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal"},{"category":"Python","command":"python.launchTensorBoard","title":"Launch TensorBoard"},{"category":"Python","command":"python.refreshTensorBoard","enablement":"python.hasActiveTensorBoardSession","icon":"$(refresh)","title":"Refresh TensorBoard"},{"category":"Python","command":"python.reportIssue","title":"Report Issue..."},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter"},{"category":"Python","command":"python.startREPL","title":"Start REPL"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output"},{"category":"Python","command":"python.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python","command":"python.installJupyter","title":"Install the Jupyter extension"}],"configuration":{"properties":{"python.activeStateToolPath":{"default":"state","description":"Path to the State Tool executable for ActiveState runtimes (version 0.36+).","scope":"machine-overridable","type":"string"},"python.autoComplete.extraPaths":{"default":[],"description":"List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.","scope":"resource","type":"array","uniqueItems":true},"python.createEnvironment.contentButton":{"default":"show","markdownDescription":"Show or hide Create Environment button in the editor for `requirements.txt` or other dependency files.","scope":"machine-overridable","type":"string","enum":["show","hide"],"tags":["experimental"]},"python.createEnvironment.trigger":{"default":"off","markdownDescription":"Detect if environment creation is required for the current project","scope":"machine-overridable","type":"string","enum":["off","prompt"],"tags":["experimental"]},"python.condaPath":{"default":"","description":"Path to the conda executable to use for activation (version 4.4+).","scope":"machine","type":"string"},"python.defaultInterpreterPath":{"default":"python","markdownDescription":"Path to default Python to use when extension loads up for the first time, no longer used once an interpreter is selected for the workspace. See [here](https://aka.ms/AAfekmf) to understand when this is used","scope":"machine-overridable","type":"string"},"python.diagnostics.sourceMapsEnabled":{"default":false,"description":"Enable source map support for meaningful stack traces in error logs.","scope":"application","type":"boolean"},"python.envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","scope":"resource","type":"string"},"python.experiments.enabled":{"default":true,"description":"Enables A/B tests experiments in the Python extension. If enabled, you may get included in proposed enhancements and/or features.","scope":"machine","type":"boolean"},"python.experiments.optInto":{"default":[],"markdownDescription":"List of experiment to opt into. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter","pythonREPLSmartSend","pythonRecommendTensorboardExt"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment.","Denotes the Python REPL Smart Send experiment.","Denotes the Tensorboard Extension recommendation experiment."]},"scope":"machine","type":"array","uniqueItems":true},"python.experiments.optOutFrom":{"default":[],"markdownDescription":"List of experiment to opt out of. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter","pythonREPLSmartSend"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment.","Denotes the Python REPL Smart Send experiment."]},"scope":"machine","type":"array","uniqueItems":true},"python.globalModuleInstallation":{"default":false,"description":"Whether to install Python modules globally when not using an environment.","scope":"resource","type":"boolean"},"python.languageServer":{"default":"Default","description":"Defines type of the language server.","enum":["Default","Jedi","Pylance","None"],"enumDescriptions":["Automatically select a language server: Pylance if installed and available, otherwise fallback to Jedi.","Use Jedi behind the Language Server Protocol (LSP) as a language server.","Use Pylance as a language server.","Disable language server capabilities."],"scope":"window","type":"string"},"python.interpreter.infoVisibility":{"default":"onPythonRelated","description":"Controls when to display information of selected interpreter in the status bar.","enum":["never","onPythonRelated","always"],"enumDescriptions":["Never display information.","Only display information if Python-related files are opened.","Always display information."],"scope":"machine","type":"string"},"python.logging.level":{"default":"error","deprecationMessage":"This setting is deprecated. Please use command `Developer: Set Log Level...` to set logging level.","description":"The logging level the extension logs at, defaults to 'error'","enum":["debug","error","info","off","warn"],"scope":"machine","type":"string"},"python.missingPackage.severity":{"default":"Hint","description":"Set severity of missing packages in requirements.txt or pyproject.toml","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string","tags":["experimental"]},"python.pipenvPath":{"default":"pipenv","description":"Path to the pipenv executable to use for activation.","scope":"machine-overridable","type":"string"},"python.poetryPath":{"default":"poetry","description":"Path to the poetry executable.","scope":"machine-overridable","type":"string"},"python.tensorBoard.logDirectory":{"default":"","description":"Set this setting to your preferred TensorBoard log directory to skip log directory prompt when starting TensorBoard.","scope":"resource","type":"string","markdownDeprecationMessage":"Tensorboard support has been moved to the extension [Tensorboard extension](https://marketplace.visualstudio.com/items?itemName=ms-toolsai.tensorboard). Instead use the setting `tensorBoard.logDirectory`.","deprecationMessage":"Tensorboard support has been moved to the extension Tensorboard extension. Instead use the setting `tensorBoard.logDirectory`."},"python.terminal.activateEnvInCurrentTerminal":{"default":false,"description":"Activate Python Environment in the current Terminal on load of the Extension.","scope":"resource","type":"boolean"},"python.terminal.activateEnvironment":{"default":true,"description":"Activate Python Environment in all Terminals created.","scope":"resource","type":"boolean"},"python.terminal.executeInFileDir":{"default":false,"description":"When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.","scope":"resource","type":"boolean"},"python.terminal.focusAfterLaunch":{"default":false,"description":"When launching a python terminal, whether to focus the cursor on the terminal.","scope":"resource","type":"boolean"},"python.terminal.launchArgs":{"default":[],"description":"Python launch arguments to use when executing a file in the terminal.","scope":"resource","type":"array"},"python.REPL.enableREPLSmartSend":{"default":true,"description":"Toggle Smart Send for the Python REPL. Smart Send enables sending the smallest runnable block of code to the REPL on Shift+Enter and moves the cursor accordingly.","scope":"resource","type":"boolean"},"python.testing.autoTestDiscoverOnSaveEnabled":{"default":true,"description":"Enable auto run test discovery when saving a test file.","scope":"resource","type":"boolean"},"python.testing.cwd":{"default":null,"description":"Optional working directory for tests.","scope":"resource","type":"string"},"python.testing.debugPort":{"default":3000,"description":"Port number used for debugging of tests.","scope":"resource","type":"number"},"python.testing.promptToConfigure":{"default":true,"description":"Prompt to configure a test framework if potential tests directories are discovered.","scope":"resource","type":"boolean"},"python.testing.pytestArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.pytestEnabled":{"default":false,"description":"Enable testing using pytest.","scope":"resource","type":"boolean"},"python.testing.pytestPath":{"default":"pytest","description":"Path to pytest (pytest), you can use a custom version of pytest by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.testing.unittestArgs":{"default":["-v","-s",".","-p","*test*.py"],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.unittestEnabled":{"default":false,"description":"Enable testing using unittest.","scope":"resource","type":"boolean"},"python.venvFolders":{"default":[],"description":"Folders in your home directory to look into for virtual environments (supports pyenv, direnv and virtualenvwrapper by default).","items":{"type":"string"},"scope":"machine","type":"array","uniqueItems":true},"python.venvPath":{"default":"","description":"Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).","scope":"machine","type":"string"}},"title":"Python","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":"number"}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":"number"}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"description":"Port to connect to.","type":"number"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":["array","string"]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"consoleTitle":{"default":"Python Debug Console","description":"Display name of the debug console or terminal"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"host":{"default":"localhost","description":"IP address of the of the local debug server (default is localhost).","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"default":0,"description":"Debug port (default is 0, resulting in the use of a dynamic port).","type":"number"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"}}}},"configurationSnippets":[],"label":"Python","languages":["python"],"type":"python","variables":{"pickProcess":"python.pickLocalProcess"},"when":"!virtualWorkspace && shellExecutionSupported"}],"grammars":[{"language":"pip-requirements","path":"./syntaxes/pip-requirements.tmLanguage.json","scopeName":"source.pip-requirements"}],"jsonValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"keybindings":[{"command":"python.execSelectionInTerminal","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused"},{"command":"python.refreshTensorBoard","key":"ctrl+r","mac":"cmd+r","when":"python.hasActiveTensorBoardSession"}],"languages":[{"aliases":["Jinja"],"extensions":[".j2",".jinja2"],"id":"jinja"},{"aliases":["pip requirements","requirements.txt"],"configuration":"./languages/pip-requirements.json","filenamePatterns":["**/*requirements*.{txt, in}","**/*constraints*.txt","**/requirements/*.{txt,in}","**/constraints/*.txt"],"filenames":["constraints.txt","requirements.in","requirements.txt"],"id":"pip-requirements"},{"filenames":[".condarc"],"id":"yaml"},{"filenames":[".flake8",".pep8",".pylintrc",".pypirc"],"id":"ini"},{"filenames":["Pipfile","poetry.lock"],"id":"toml"},{"filenames":["Pipfile.lock"],"id":"json"}],"menus":{"commandPalette":[{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.configureTests","title":"Configure Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment...","when":"false"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.enableSourceMapSupport","title":"Enable Source Map Support For Extension Debugging","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File","when":"false"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal","when":"false"},{"category":"Python","command":"python.debugInTerminal","icon":"$(debug-alt)","title":"Debug Python File","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.launchTensorBoard","title":"Launch TensorBoard","when":"!virtualWorkspace && shellExecutionSupported && !python.tensorboardExtInstalled"},{"category":"Python","command":"python.refreshTensorBoard","enablement":"python.hasActiveTensorBoardSession","icon":"$(refresh)","title":"Refresh TensorBoard","when":"!virtualWorkspace && shellExecutionSupported && !python.tensorboardExtInstalled"},{"category":"Python","command":"python.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.startREPL","title":"Start REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewOutput","title":"Show Output","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/content":[{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceLangId == pip-requirements && !virtualWorkspace && shellExecutionSupported && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"},{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceFilename == pyproject.toml && pipInstallableToml && !virtualWorkspace && shellExecutionSupported  && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"}],"editor/context":[{"submenu":"python.run","group":"Python","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && isWorkspaceTrusted"},{"submenu":"python.runFileInteractive","group":"Jupyter2","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && !isJupyterInstalled && isWorkspaceTrusted"}],"python.runFileInteractive":[{"command":"python.installJupyter","group":"Jupyter2","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"python.run":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInDjangoShell","group":"Python","when":"editorHasSelection && editorLangId == python && python.isDjangoProject && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInTerminal","group":"Python","when":"editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported"}],"editor/title":[{"command":"python.refreshTensorBoard","group":"navigation@0","when":"python.hasActiveTensorBoardSession && !virtualWorkspace && shellExecutionSupported"}],"editor/title/run":[{"command":"python.execInTerminal-icon","group":"navigation@0","title":"Run Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execInDedicatedTerminal","group":"navigation@0","title":"Run Python File in Dedicated Terminal","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"python.debugInTerminal","group":"navigation@1","title":"Debug Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}],"explorer/context":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"file/newFile":[{"command":"python.createNewFile","group":"file","when":"!virtualWorkspace"}],"view/title":[{"command":"testing.reRunFailTests","when":"view == workbench.view.testing && hasFailedTests && !virtualWorkspace && shellExecutionSupported","group":"navigation@1"}]},"submenus":[{"id":"python.run","label":"Run Python","icon":"$(play)"},{"id":"python.runFileInteractive","label":"Run in Interactive window"}],"viewsWelcome":[{"view":"testing","contents":"Configure a test framework to see your tests here.\n[Configure Python Tests](command:python.configureTests)","when":"!virtualWorkspace && shellExecutionSupported"}],"yamlValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}]},"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package -o ms-python-insiders.vsix","prePublish":"gulp clean && gulp prePublishNonBundle","compile":"tsc -watch -p ./","compileApi":"node ./node_modules/typescript/lib/tsc.js -b ./pythonExtensionApi/tsconfig.json","compiled":"deemon npm run compile","kill-compiled":"deemon --kill npm run compile","checkDependencies":"gulp checkDependencies","test":"node ./out/test/standardTest.js && node ./out/test/multiRootTest.js","test:unittests":"mocha --config ./build/.mocha.unittests.json","test:unittests:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --config ./build/.mocha.unittests.json","test:functional":"mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:perf":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.perf.json","test:functional:memleak":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:cover:report":"nyc --nycrc-path ./build/.nycrc  report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura","testDebugger":"node ./out/test/testBootstrap.js ./out/test/debuggerTest.js","testDebugger:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/debuggerTest.js","testSingleWorkspace":"node ./out/test/testBootstrap.js ./out/test/standardTest.js","testSingleWorkspace:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/standardTest.js","preTestJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js","testJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js && cross-env CODE_TESTS_WORKSPACE=src/test VSC_PYTHON_CI_TEST_GREP='Language Server:' node ./out/test/testBootstrap.js ./out/test/standardTest.js && node ./out/test/languageServers/jedi/lspTeardown.js","testMultiWorkspace":"node ./out/test/testBootstrap.js ./out/test/multiRootTest.js","testPerformance":"node ./out/test/testBootstrap.js ./out/test/performanceTest.js","testSmoke":"cross-env INSTALL_JUPYTER_EXTENSION=true \"node ./out/test/smokeTest.js\"","testInsiders":"cross-env VSC_PYTHON_CI_TEST_VSC_CHANNEL=insiders INSTALL_PYLANCE_EXTENSION=true TEST_FILES_SUFFIX=insiders.test CODE_TESTS_WORKSPACE=src/testMultiRootWkspc/smokeTests \"node ./out/test/standardTest.js\"","lint-staged":"node gulpfile.js","lint":"eslint --ext .ts,.js src build pythonExtensionApi","lint-fix":"eslint --fix --ext .ts,.js src build pythonExtensionApi gulpfile.js","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","clean":"gulp clean","addExtensionPackDependencies":"gulp addExtensionPackDependencies","updateBuildNumber":"gulp updateBuildNumber","verifyBundle":"gulp verifyBundle","webpack":"webpack"},"dependencies":{"@iarna/toml":"^2.2.5","@vscode/extension-telemetry":"^0.8.4","@vscode/jupyter-lsp-middleware":"^0.2.50","arch":"^2.1.0","fs-extra":"^10.0.1","glob":"^7.2.0","hash.js":"^1.1.7","iconv-lite":"^0.6.3","inversify":"^5.0.4","jsonc-parser":"^3.0.0","lodash":"^4.17.21","minimatch":"^5.0.1","named-js-regexp":"^1.3.3","node-stream-zip":"^1.6.0","reflect-metadata":"^0.1.12","rxjs":"^6.5.4","rxjs-compat":"^6.5.4","semver":"^7.5.2","stack-trace":"0.0.10","sudo-prompt":"^9.2.1","tmp":"^0.0.33","uint64be":"^3.0.0","unicode":"^14.0.0","untildify":"^4.0.0","vscode-debugprotocol":"^1.28.0","vscode-jsonrpc":"^8.2.0","vscode-languageclient":"^9.0.1","vscode-languageserver-protocol":"^3.17.5","vscode-tas-client":"^0.1.75","which":"^2.0.2","winreg":"^1.2.4","xml2js":"^0.5.0"},"devDependencies":{"@istanbuljs/nyc-config-typescript":"^1.0.2","@types/bent":"^7.3.0","@types/chai":"^4.1.2","@types/chai-arrays":"^2.0.0","@types/chai-as-promised":"^7.1.0","@types/download":"^8.0.1","@types/fs-extra":"^9.0.13","@types/glob":"^7.2.0","@types/lodash":"^4.14.104","@types/mocha":"^9.1.0","@types/node":"^18.17.1","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^10.0.11","@types/stack-trace":"0.0.29","@types/tmp":"^0.0.33","@types/vscode":"^1.81.0","@types/which":"^2.0.1","@types/winreg":"^1.2.30","@types/xml2js":"^0.4.2","@typescript-eslint/eslint-plugin":"^3.7.0","@typescript-eslint/parser":"^3.7.0","@vscode/test-electron":"^2.3.4","@vscode/vsce":"^2.18.0","bent":"^7.3.12","chai":"^4.1.2","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","copy-webpack-plugin":"^9.1.0","cross-spawn":"^6.0.5","del":"^6.0.0","download":"^8.0.0","eslint":"^7.2.0","eslint-config-airbnb":"^18.2.0","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.25.4","eslint-plugin-jsx-a11y":"^6.3.1","eslint-plugin-react":"^7.20.3","eslint-plugin-react-hooks":"^4.0.0","expose-loader":"^3.1.0","flat":"^5.0.2","get-port":"^5.1.1","gulp":"^4.0.0","gulp-typescript":"^5.0.0","mocha":"^9.2.2","mocha-junit-reporter":"^2.0.2","mocha-multi-reporters":"^1.1.7","node-has-native-dependencies":"^1.0.2","node-loader":"^1.0.2","node-polyfill-webpack-plugin":"^1.1.4","nyc":"^15.0.0","prettier":"^2.0.2","rewiremock":"^3.13.0","shortid":"^2.2.8","sinon":"^13.0.1","source-map-support":"^0.5.12","ts-loader":"^9.2.8","ts-mockito":"^2.5.0","ts-node":"^10.7.0","tsconfig-paths-webpack-plugin":"^3.2.0","typemoq":"^2.1.0","typescript":"4.5.5","uuid":"^8.3.2","webpack":"^5.76.0","worker-loader":"^3.0.8","webpack-bundle-analyzer":"^4.5.0","webpack-cli":"^4.9.2","webpack-fix-default-import-plugin":"^1.0.3","webpack-merge":"^5.8.0","webpack-node-externals":"^3.0.0","webpack-require-from":"^1.8.6","yargs":"^15.3.1"},"extensionPack":["ms-python.vscode-pylance"]},"location":{"$mid":1,"path":"/home/aexyzk/.vscode-oss/extensions/ms-python.python-2023.22.1-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"ms-python","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1705126553482,"pinned":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ecmel.vscode-html-css","uuid":"aaee577c-f062-495a-9816-0cbd442f1d25"},"manifest":{"name":"vscode-html-css","displayName":"HTML CSS Support","description":"CSS Intellisense for HTML","version":"2.0.6","license":"MIT","publisher":"ecmel","author":{"name":"Ecmel Ercan","url":"https://github.com/ecmel"},"sponsor":{"url":"https://github.com/sponsors/ecmel"},"repository":{"type":"git","url":"https://github.com/ecmel/vscode-html-css.git"},"bugs":"https://github.com/ecmel/vscode-html-css/issues","homepage":"https://github.com/ecmel/vscode-html-css","engines":{"vscode":"^1.66.0"},"categories":["Programming Languages","Other"],"keywords":["css","html","twig","blade","django","nunjucks","mustache","angular","react","vue","lit","multi-root ready"],"activationEvents":["onStartupFinished"],"contributes":{"configuration":{"title":"CSS Settings","properties":{"css.enabledLanguages":{"type":"array","scope":"application","description":"List of languages which suggestions are desired.","default":["html"]},"css.styleSheets":{"type":"array","scope":"resource","description":"List of local or remote style sheets for suggestions.","default":[]}}},"commands":[{"command":"vscode-html-css.validate","title":"CSS: Validate selectors"},{"command":"vscode-html-css.clear","title":"CSS: Clear style cache"}]},"capabilities":{"untrustedWorkspaces":{"supported":false},"virtualWorkspaces":true},"main":"./dist/extension.js","icon":"icon.png","scripts":{"clean":"git clean -Xdf","prereset":"npm run clean","reset":"npm install","format":"prettier --ignore-path .gitignore -w --list-different .","debug":"rollup -c -w","build":"rollup -c --forceExit","compile":"tsc -p ./ --outDir out --sourceMap true --module commonjs --moduleResolution node","pretest":"npm run build && npm run compile","test":"node ./out/test/runTest.js","coverage":"c8 --src out npm run test","update":"ncu -u -x prettier -x @types/vscode","vscode:prepublish":"npm run build","package":"vsce package","publish":"vsce publish"},"devDependencies":{"@rollup/plugin-commonjs":"^25.0.7","@rollup/plugin-node-resolve":"^15.2.3","@rollup/plugin-terser":"^0.4.4","@rollup/plugin-typescript":"^11.1.5","@types/line-column":"^1.0.2","@types/mocha":"^10.0.6","@types/node":"^20.10.6","@types/sinon":"^17.0.2","@types/vscode":"^1.66.0","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^2.22.0","c8":"^8.0.1","fast-glob":"^3.3.2","line-column":"^1.0.2","mocha":"^10.2.0","prettier":"^2.8.8","rollup":"^4.9.2","sinon":"^17.0.1","tslib":"^2.6.2","typescript":"^5.3.3"}},"location":{"$mid":1,"path":"/home/aexyzk/.vscode-oss/extensions/ecmel.vscode-html-css-2.0.6-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"aaee577c-f062-495a-9816-0cbd442f1d25","publisherId":"7aa35068-d7c4-4220-b9c1-10360795fd5f","publisherDisplayName":"ecmel","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1705126564654,"pinned":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"zaaack.markdown-editor","uuid":"d1d5603c-2be4-4f1b-b7b6-d7e908a8ad73"},"manifest":{"name":"markdown-editor","displayName":"Markdown Editor","icon":"media/logo.png","description":"A full-featured WYSIWYG editor for markdown.","version":"0.1.9","publisher":"zaaack","private":true,"engines":{"vscode":"^1.47.0"},"categories":["Programming Languages","Other"],"keywords":["markdown","editor","wysiwyg","typora","markdown-previewer","markdown-editor"],"activationEvents":["onCommand:markdown-editor.openEditor","onWebviewPanel:markdown-editor","onLanguage:markdown"],"repository":{"type":"git","url":"https://github.com/zaaack/vscode-markdown-editor.git"},"files":["./media","./out"],"main":"./out/extension.js","contributes":{"commands":[{"command":"markdown-editor.openEditor","title":"Open with markdown editor","category":"markdown-editor"}],"menus":{"explorer/context":[{"when":"resourceLangId == markdown","command":"markdown-editor.openEditor","group":"navigation"}],"editor/title/context":[{"when":"resourceLangId == markdown","command":"markdown-editor.openEditor","group":"1_open"}]},"configuration":{"title":"markdown-editor","properties":{"markdown-editor.imageSaveFolder":{"type":"string","default":"assets","description":"Save images to which folder when upload in markdown, default relative to the markdown file, you can set to project root via `${projectRoot}/assets`."},"markdown-editor.useVscodeThemeColor":{"type":"boolean","default":true,"description":"Use vscode theme's background color as the markdown editor's background color."}}},"keybindings":[{"key":"ctrl+shift+alt+m","command":"markdown-editor.openEditor","mac":"cmd+shift+alt+m","when":"editorTextFocus && editorLangId == markdown"}]},"scripts":{"vscode:prepublish":"yarn foy build","preversion":"yarn foy build","lint":"eslint . --ext .ts,.tsx","watch":"yarn foy watch","start":"yarn foy watch","pub":"npm version patch; git push origin master --tags","test":"echo 0"},"dependencies":{},"devDependencies":{"@types/node":"^12.12.0","@types/vscode":"^1.47.0","@typescript-eslint/eslint-plugin":"^4.16.0","@typescript-eslint/parser":"^4.16.0","eslint":"^7.21.0","foy":"^0.2.5","ts-node":"^9.1.1","typescript":"^4.2.2"}},"location":{"$mid":1,"path":"/home/aexyzk/.vscode-oss/extensions/zaaack.markdown-editor-0.1.9-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"d1d5603c-2be4-4f1b-b7b6-d7e908a8ad73","publisherId":"6131e0ca-41c1-40fb-9cac-0e7e0d416566","publisherDisplayName":"zaaack","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1705126572281,"pinned":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-dotnettools.vscode-dotnet-runtime","uuid":"1aab81a1-b3d9-4aef-976b-577d5d90fe3f"},"manifest":{"name":"vscode-dotnet-runtime","repository":{"type":"git","url":"https://github.com/dotnet/vscode-dotnet-runtime.git"},"bugs":{"url":"https://github.com/dotnet/vscode-dotnet-runtime/issues"},"license":"MIT","author":"Microsoft Corporation","displayName":".NET Install Tool","description":"This extension installs and manages different versions of the .NET Runtime.","appInsightsKey":"02dc18e0-7494-43b2-b2a3-18ada5fcb522","icon":"images/dotnetIcon.png","version":"2.0.0","publisher":"ms-dotnettools","engines":{"vscode":"^1.74.0"},"categories":["Other"],"keywords":[".NET",".NET Core","dotnet","Extension Authoring","runtime"],"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"activationEvents":["onCommand:dotnet.acquire","onCommand:dotnet.acquireStatus","onCommand:dotnet.acquireGlobalSDK","onCommand:dotnet.uninstallAll","onCommand:dotnet.showAcquisitionLog","onCommand:dotnet.ensureDotnetDependencies"],"main":"./dist/extension.js","types":"./dist/extension.d.ts","contributes":{"commands":[{"command":"dotnet.reportIssue","title":"Report an issue with the .NET Install Tool.","category":".NET Install Tool"}],"configuration":{"title":".NET Install Tool","properties":{"dotnetAcquisitionExtension.enableTelemetry":{"type":"boolean","default":true,"description":"Enable Telemetry for the .NET Install Tool. Restart VS Code to apply changes."},"dotnetAcquisitionExtension.installTimeoutValue":{"type":"number","default":600,"description":"Timeout for installing .NET in seconds."},"dotnetAcquisitionExtension.existingDotnetPath":{"type":"array","description":"File Path to an existing installation of .NET. Used for both the .NET SDK and .NET Runtime.","examples":["C:\\Program Files\\dotnet\\dotnet.exe","/usr/local/share/dotnet/dotnet","/usr/lib/dotnet/dotnet"]},"dotnetAcquisitionExtension.proxyUrl":{"type":"string","description":"URL to a proxy if you use one, such as: https://proxy:port"}}}},"scripts":{"vscode:prepublish":"npm run compile-all && npm install && webpack --mode production","compile":"npm run clean && tsc -p ./","watch":"npm run compile && tsc -watch -p ./","test":"npm run compile --silent && node ./dist/test/functional/runTest.js","clean":"rimraf dist","compile-all":"cd ../vscode-dotnet-runtime-library && npm install && npm run compile && cd ../vscode-dotnet-runtime-extension && npm install && npm run compile","lint":"tslint -c ../tslint.json '../vscode-dotnet-runtime-library/src/**/*.ts' '../vscode-dotnet-runtime-extension/src/**/*.ts'","webpack":"webpack --mode development"},"dependencies":{"axios":"^1.3.4","axios-cache-interceptor":"^1.0.1","axios-retry":"^3.4.0","chai":"4.3.4","child_process":"^1.0.2","diff":">=5.0.0","glob":"^7.2.0","got":"11.8.5","hmac-drbg":"^1.0.1","https-proxy-agent":"^7.0.2","is-online":"^9.0.1","mocha":"^9.1.3","open":"^8.4.0","public-ip":"5.0.0","rimraf":"3.0.2","safe-regex-test":"^1.0.0","shelljs":"^0.8.5","ts-loader":"^9.2.6","tslint":"^5.20.1","typescript":"4.4.4","vscode-dotnet-runtime-library":"file:../vscode-dotnet-runtime-library","vscode-test":"^1.6.1","yarn":"^1.22.19"},"devDependencies":{"@types/chai":"^4.3.5","@types/mocha":"^9.0.0","@types/node":"16.11.7","@types/rimraf":"3.0.2","@types/vscode":"1.74.0","copy-webpack-plugin":"9.0.1","webpack":"5.88.2","webpack-cli":"4.9.1"}},"location":{"$mid":1,"path":"/home/aexyzk/.vscode-oss/extensions/ms-dotnettools.vscode-dotnet-runtime-2.0.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"1aab81a1-b3d9-4aef-976b-577d5d90fe3f","publisherId":"d05e23de-3974-4ff0-8d47-23ee77830092","publisherDisplayName":"ms-dotnettools","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1705126580301,"pinned":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"muhammad-sammy.csharp","uuid":"57b4ceec-c35a-4a96-ab38-23c6338df406"},"manifest":{"name":"csharp","publisher":"muhammad-sammy","version":"2.15.30","description":"Free/Libre C# support for vscode-compatible editors.","displayName":"C#","author":"Muhammad Sammy","license":"SEE LICENSE IN RuntimeLicenses/license.txt","qna":"https://github.com/muhammadsammy/free-vscode-csharp/issues","icon":"images/csharpIcon.png","preview":false,"bugs":{"url":"https://github.com/muhammadsammy/free-vscode-csharp/issues"},"repository":{"type":"git","url":"https://github.com/muhammadsammy/free-vscode-csharp.git"},"categories":["Debuggers","Programming Languages","Linters","Snippets"],"keywords":["multi-root ready",".NET","ASP.NET",".NET Core","dotnet","coreclr"],"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":false}},"defaults":{"roslyn":"4.10.0-1.24058.1","omniSharp":"1.39.11","razor":"7.0.0-preview.23627.2","razorOmnisharp":"7.0.0-preview.23363.1","razorTelemetry":"7.0.0-preview.23627.2"},"main":"./dist/extension","l10n":"./l10n","brokeredServices":[{"moniker":{"name":"Microsoft.CodeAnalysis.LanguageClient.SolutionSnapshotProvider","version":"0.1"}},{"moniker":{"name":"Microsoft.VisualStudio.CSharpExtension.BuildResultService","version":"0.1"}}],"scripts":{"vscode:prepublish":"tsc -p ./ && webpack --mode production","l10nDevGenerateLocalizationBundle":"npx @vscode/l10n-dev export --outDir ./l10n ./src","compile":"tsc -p ./ && npx eslint ./ && npm run l10nDevGenerateLocalizationBundle && npm run compile:razorTextMate","compile:razorTextMate":"npx js-yaml src/razor/syntaxes/aspnetcorerazor.tmLanguage.yml > src/razor/syntaxes/aspnetcorerazor.tmLanguage.json","compileDev":"tsc -p ./ && npx eslint ./ && webpack --mode development && npm run l10nDevGenerateLocalizationBundle","watch":"tsc -watch -p ./","test":"tsc -p ./ && gulp test","test:integration":"tsc -p ./ && gulp test:integration","test:razor":"tsc -p ./ && npm run compile:razorTextMate && gulp test:razor","test:razorintegration":"tsc -p ./ && gulp test:razorintegration","test:artifacts":"tsc -p ./ && gulp test:artifacts","omnisharptest":"tsc -p ./ && gulp omnisharptest","omnisharptest:unit":"tsc -p ./ && gulp omnisharptest:unit","omnisharptest:integration":"tsc -p ./ && gulp omnisharptest:integration","omnisharptest:integration:singleCsproj":"tsc -p ./ && gulp omnisharptest:integration:singleCsproj","omnisharptest:integration:slnWithCsproj":"tsc -p ./ && gulp omnisharptest:integration:slnWithCsproj","omnisharptest:integration:slnFilterWithCsproj":"tsc -p ./ && gulp omnisharptest:integration:slnFilterWithCsproj","unpackage:vsix":"gulp vsix:release:unpackage","updatePackageDependencies":"gulp updatePackageDependencies","l10nDevGenerateXlf":"npx @vscode/l10n-dev generate-xlf ./package.nls.json ./l10n/bundle.l10n.json --outFile ./loc/vscode-csharp.xlf","l10nDevImportXlf":"npx @vscode/l10n-dev import-xlf ./loc/vscode-csharp.*.xlf --outDir ./l10n && move l10n\\package.nls.*.json ."},"extensionDependencies":["ms-dotnettools.vscode-dotnet-runtime"],"dependencies":{"@microsoft/servicehub-framework":"4.2.99-beta","@octokit/rest":"^20.0.1","@types/cross-spawn":"6.0.2","@vscode/debugprotocol":"1.56.0","@vscode/extension-telemetry":"^0.9.0","@vscode/js-debug-browsers":"^1.1.0","async-file":"2.0.2","cross-spawn":"6.0.5","execa":"4.0.0","fs-extra":"9.1.0","http-proxy-agent":"7.0.0","https-proxy-agent":"7.0.2","jsonc-parser":"3.0.0","microsoft.aspnetcore.razor.vscode":"https://download.visualstudio.microsoft.com/download/pr/aee63398-023f-48db-bba2-30162c68f0c4/0af42abab690d5de903a4a814d6aedc1/microsoft.aspnetcore.razor.vscode-7.0.0-preview.23363.1.tgz","nerdbank-gitversioning":"^3.6.79-alpha","node-machine-id":"1.1.12","ps-list":"7.2.0","request-light":"0.7.0","rxjs":"6.6.7","semver":"7.5.4","stream":"0.0.2","strip-bom":"5.0.0","strip-bom-buf":"2.0.0","tar":"^6.1.15","tmp":"0.0.33","uuid":"^9.0.0","vscode-html-languageservice":"^5.0.1","vscode-jsonrpc":"8.2.0-next.0","vscode-languageclient":"8.2.0-next.1","vscode-languageserver-protocol":"3.17.4-next.1","vscode-languageserver-textdocument":"^1.0.5","vscode-nls":"5.0.1","yauzl":"2.10.0"},"devDependencies":{"@jest/globals":"^29.6.2","@types/archiver":"5.1.0","@types/del":"3.0.1","@types/fs-extra":"5.0.4","@types/gulp":"4.0.5","@types/minimist":"1.2.1","@types/node":"16.11.38","@types/semver":"7.3.13","@types/tar":"6.1.5","@types/tmp":"0.0.33","@types/unzipper":"^0.9.1","@types/uuid":"^9.0.1","@types/vscode":"1.73.0","@types/yauzl":"2.10.0","@typescript-eslint/eslint-plugin":"^5.61.0","@typescript-eslint/parser":"^5.61.0","@vscode/l10n-dev":"^0.0.30","@vscode/test-electron":"2.3.8","@vscode/vsce":"2.21.0","archiver":"5.3.0","del":"3.0.0","eslint":"^8.43.0","eslint-config-prettier":"^8.8.0","eslint-config-standard-with-typescript":"^35.0.0","eslint-plugin-header":"^3.1.1","eslint-plugin-import":"^2.27.5","eslint-plugin-n":"^15.7.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-promise":"^6.1.1","eslint-plugin-unicorn":"^47.0.0","find-versions":"4.0.0","get-port":"5.1.1","glob-promise":"4.1.0","gulp":"4.0.2","jest":"^29.6.2","jest-cli":"^29.6.4","jest-junit":"^16.0.0","js-yaml":">=3.13.1","minimatch":"3.0.5","mock-http-server":"1.4.2","octokit":"^3.1.0","prettier":"2.8.8","rimraf":"2.6.3","source-map-support":"^0.5.21","ts-jest":"^29.1.1","ts-loader":"9.0.0","ts-node":"9.1.1","typescript":"^5.1.6","unzipper":"0.10.11","vscode-oniguruma":"^1.6.1","vscode-textmate":"^6.0.0","vscode-uri":"^3.0.7","webpack":"5.76.0","webpack-cli":"4.6.0"},"runtimeDependencies":[{"id":"OmniSharp","description":"OmniSharp for Windows (.NET 4.7.2 / x86)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.11/omnisharp-win-x86-1.39.11.zip","installPath":".omnisharp/1.39.11","platforms":["win32"],"architectures":["x86"],"installTestPath":"./.omnisharp/1.39.11/OmniSharp.exe","platformId":"win-x86","isFramework":true,"integrity":"DF52F6BCEEF14033E8A8C374EF1B81D223FFD17BA9D7E297CFCF0C4BEBF0A22F"},{"id":"OmniSharp","description":"OmniSharp for Windows (.NET 6 / x86)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.11/omnisharp-win-x86-net6.0-1.39.11.zip","installPath":".omnisharp/1.39.11-net6.0","platforms":["win32"],"architectures":["x86"],"installTestPath":"./.omnisharp/1.39.11-net6.0/OmniSharp.dll","platformId":"win-x86","isFramework":false,"integrity":"BAF991481E56A75E2D865648A212310BB8EB9ACA44BABE64AA284C8E044DC844"},{"id":"OmniSharp","description":"OmniSharp for Windows (.NET 4.7.2 / x64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.11/omnisharp-win-x64-1.39.11.zip","installPath":".omnisharp/1.39.11","platforms":["win32"],"architectures":["x86_64"],"installTestPath":"./.omnisharp/1.39.11/OmniSharp.exe","platformId":"win-x64","isFramework":true,"integrity":"E1AD559974430C9AA81819F1433583B0EE9A977D2DAAE1DE32D4D408503B2867"},{"id":"OmniSharp","description":"OmniSharp for Windows (.NET 6 / x64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.11/omnisharp-win-x64-net6.0-1.39.11.zip","installPath":".omnisharp/1.39.11-net6.0","platforms":["win32"],"architectures":["x86_64"],"installTestPath":"./.omnisharp/1.39.11-net6.0/OmniSharp.dll","platformId":"win-x64","isFramework":false,"integrity":"A71FD29E6CACDF41FD44ACB9F8532BE33DBD4CB313513E47A031443F648BDBAB"},{"id":"OmniSharp","description":"OmniSharp for Windows (.NET 4.7.2 / arm64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.11/omnisharp-win-arm64-1.39.11.zip","installPath":".omnisharp/1.39.11","platforms":["win32"],"architectures":["arm64"],"installTestPath":"./.omnisharp/1.39.11/OmniSharp.exe","platformId":"win-arm64","isFramework":true,"integrity":"D42BB3A146B9DED5C59630708A6FFB0F76B2067B31AE3A6596596AFFCE7D79C9"},{"id":"OmniSharp","description":"OmniSharp for Windows (.NET 6 / arm64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.11/omnisharp-win-arm64-net6.0-1.39.11.zip","installPath":".omnisharp/1.39.11-net6.0","platforms":["win32"],"architectures":["arm64"],"installTestPath":"./.omnisharp/1.39.11-net6.0/OmniSharp.dll","platformId":"win-arm64","isFramework":false,"integrity":"FFC67D2A97F8E04161BE2DCA5CE48ECEB1B09A3DD0FCE697122D5B77302FC152"},{"id":"OmniSharp","description":"OmniSharp for OSX (Mono / x64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.11/omnisharp-osx-1.39.11.zip","installPath":".omnisharp/1.39.11","platforms":["darwin"],"architectures":["x86_64","arm64"],"binaries":["./mono.osx","./run"],"installTestPath":"./.omnisharp/1.39.11/run","platformId":"osx","isFramework":true,"integrity":"1E339604AE52F531655B57A1058EB56E5CE0E1311C62B4CE16BE7CD0D265AA50"},{"id":"OmniSharp","description":"OmniSharp for OSX (.NET 6 / x64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.11/omnisharp-osx-x64-net6.0-1.39.11.zip","installPath":".omnisharp/1.39.11-net6.0","platforms":["darwin"],"architectures":["x86_64"],"installTestPath":"./.omnisharp/1.39.11-net6.0/OmniSharp.dll","platformId":"osx-x64","isFramework":false,"integrity":"01571AE3B5DF4345E42B1EBD85601A654985590D403F40D2F802ED3204516350"},{"id":"OmniSharp","description":"OmniSharp for OSX (.NET 6 / arm64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.11/omnisharp-osx-arm64-net6.0-1.39.11.zip","installPath":".omnisharp/1.39.11-net6.0","platforms":["darwin"],"architectures":["arm64"],"installTestPath":"./.omnisharp/1.39.11-net6.0/OmniSharp.dll","platformId":"osx-arm64","isFramework":false,"integrity":"9318997071878AB2DD7ECA29F1C797449B6C5454A0CB78BED0D17121BEC37B10"},{"id":"OmniSharp","description":"OmniSharp for Linux (Mono / x86)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.11/omnisharp-linux-x86-1.39.11.zip","installPath":".omnisharp/1.39.11","platforms":["linux"],"architectures":["x86","i686"],"binaries":["./mono.linux-x86","./run"],"installTestPath":"./.omnisharp/1.39.11/run","platformId":"linux-x86","isFramework":true,"integrity":"9568941017C31318D893669647042065985A0BA871708DA3688208D50CA7F452"},{"id":"OmniSharp","description":"OmniSharp for Linux (Mono / x64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.11/omnisharp-linux-x64-1.39.11.zip","installPath":".omnisharp/1.39.11","platforms":["linux"],"architectures":["x86_64"],"binaries":["./mono.linux-x86_64","./run"],"installTestPath":"./.omnisharp/1.39.11/run","platformId":"linux-x64","isFramework":true,"integrity":"88B70F9D4D7587562C3F25EC1062E8A8120EBCE7083D56E91D9AE4A6C72E4340"},{"id":"OmniSharp","description":"OmniSharp for Linux (.NET 6 / x64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.11/omnisharp-linux-x64-net6.0-1.39.11.zip","installPath":".omnisharp/1.39.11-net6.0","platforms":["linux"],"architectures":["x86_64"],"installTestPath":"./.omnisharp/1.39.11-net6.0/OmniSharp.dll","platformId":"linux-x64","isFramework":false,"integrity":"E58BE0F23DD84F2ACCEA245D7DBB8F9DE6ADEA354D44CB2A3F10D7F1326571D9"},{"id":"OmniSharp","description":"OmniSharp for Linux (Mono / arm64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.11/omnisharp-linux-arm64-1.39.11.zip","installPath":".omnisharp/1.39.11","platforms":["linux"],"architectures":["arm64"],"binaries":["./mono.linux-arm64","./run"],"installTestPath":"./.omnisharp/1.39.11/run","platformId":"linux-arm64","isFramework":true,"integrity":"A10A5595AB0B13BD22495A7278995D9711B12F9EDE04AA3BB29CBE8F175EFABA"},{"id":"OmniSharp","description":"OmniSharp for Linux (.NET 6 / arm64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.11/omnisharp-linux-arm64-net6.0-1.39.11.zip","installPath":".omnisharp/1.39.11-net6.0","platforms":["linux"],"architectures":["arm64"],"installTestPath":"./.omnisharp/1.39.11-net6.0/OmniSharp.dll","platformId":"linux-arm64","isFramework":false,"integrity":"D4794CBA966B9B5D0F731E1606E732D5C231D4B1D345788B837565914D880A0E"},{"id":"OmniSharp","description":"OmniSharp for Linux musl (.NET 6 / x64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.11/omnisharp-linux-musl-x64-net6.0-1.39.11.zip","installPath":".omnisharp/1.39.11-net6.0","platforms":["linux-musl"],"architectures":["x86_64"],"installTestPath":"./.omnisharp/1.39.11-net6.0/OmniSharp.dll","platformId":"linux-musl-x64","isFramework":false,"integrity":"E8F924BB793C60B032FADE805030DF8F8F9B62F7FC32BF3B688EEA1B7E94B5DA"},{"id":"OmniSharp","description":"OmniSharp for Linux musl (.NET 6 / arm64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.11/omnisharp-linux-musl-arm64-net6.0-1.39.11.zip","installPath":".omnisharp/1.39.11-net6.0","platforms":["linux-musl"],"architectures":["arm64"],"installTestPath":"./.omnisharp/1.39.11-net6.0/OmniSharp.dll","platformId":"linux-musl-arm64","isFramework":false,"integrity":"223B58388C0F7226874DCA9053FE10B10739F2E43663DEED3F2F48C892E0D8E6"},{"id":"Debugger","description":".NET Core Debugger (Windows / x64)","url":"https://github.com/Samsung/netcoredbg/releases/download/3.0.0-1018/netcoredbg-win64.zip","installPath":".debugger","platforms":["win32"],"architectures":["x86_64"],"installTestPath":".debugger/netcoredbg/netcoredbg.exe"},{"id":"Debugger","description":".NET Core Debugger (macOS / x64)","url":"https://github.com/Samsung/netcoredbg/releases/download/3.0.0-1018/netcoredbg-osx-amd64.tar.gz","installPath":".debugger","platforms":["darwin"],"architectures":["x86_64","arm64"],"binaries":["./netcoredbg"],"installTestPath":".debugger/netcoredbg/netcoredbg"},{"id":"Debugger","description":".NET Core Debugger (linux / ARM64)","url":"https://github.com/Samsung/netcoredbg/releases/download/3.0.0-1018/netcoredbg-linux-arm64.tar.gz","installPath":".debugger","platforms":["linux"],"architectures":["arm64"],"binaries":["./netcoredbg"],"installTestPath":".debugger/netcoredbg/netcoredbg"},{"id":"Debugger","description":".NET Core Debugger (linux / x64)","url":"https://github.com/Samsung/netcoredbg/releases/download/3.0.0-1018/netcoredbg-linux-amd64.tar.gz","installPath":".debugger","platforms":["linux","linux-musl"],"architectures":["x86_64"],"binaries":["./netcoredbg"],"installTestPath":".debugger/netcoredbg/netcoredbg"},{"id":"Razor","description":"Razor Language Server (Windows / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/9e436821-9ad7-4d14-81bd-69a8ab07838f/5d025f318cb834236a06439eb37ce889/razorlanguageserver-win-x64-7.0.0-preview.23627.2.zip","installPath":".razor","platforms":["win32"],"architectures":["x86_64"],"integrity":"C4868EDA9D4E004FD97B5498B471C6B866E32242E6F829C7945DF206C6132C63"},{"id":"Razor","description":"Razor Language Server (Windows / x86)","url":"https://download.visualstudio.microsoft.com/download/pr/9e436821-9ad7-4d14-81bd-69a8ab07838f/adb8c2855e48de8cdd7e39eb669583fd/razorlanguageserver-win-x86-7.0.0-preview.23627.2.zip","installPath":".razor","platforms":["win32"],"architectures":["x86"],"integrity":"57788B1E123D9099EC7B7A800532F81FFA05A7555073606417BED9F2A9FC0722"},{"id":"Razor","description":"Razor Language Server (Windows / ARM64)","url":"https://download.visualstudio.microsoft.com/download/pr/9e436821-9ad7-4d14-81bd-69a8ab07838f/3f8fd08587afa3b615886dd745723497/razorlanguageserver-win-arm64-7.0.0-preview.23627.2.zip","installPath":".razor","platforms":["win32"],"architectures":["arm64"],"integrity":"E9CFA28A88E48D1A15208B4466E46E82F61CFF3A395C270AE28DBE535882C578"},{"id":"Razor","description":"Razor Language Server (Linux / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/9e436821-9ad7-4d14-81bd-69a8ab07838f/a9c955bc5b09ee22f82309ec821ea630/razorlanguageserver-linux-x64-7.0.0-preview.23627.2.zip","installPath":".razor","platforms":["linux"],"architectures":["x86_64"],"binaries":["./rzls"],"integrity":"F69C8C28080D6B93367856CC084B65A719EF7F6F66DBA7521520D84824147EBC"},{"id":"Razor","description":"Razor Language Server (Linux ARM64)","url":"https://download.visualstudio.microsoft.com/download/pr/9e436821-9ad7-4d14-81bd-69a8ab07838f/57a8b1dc12af90bdc1b8e0036d4b5cf8/razorlanguageserver-linux-arm64-7.0.0-preview.23627.2.zip","installPath":".razor","platforms":["linux"],"architectures":["arm64"],"binaries":["./rzls"],"integrity":"ED6CE8A36F6C0CF77E1012B03078BE745D3F7045EB8A71FAA31D32E948591692"},{"id":"Razor","description":"Razor Language Server (Linux musl / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/9e436821-9ad7-4d14-81bd-69a8ab07838f/b6de6303a02473ba8fbe4d127d3d0827/razorlanguageserver-linux-musl-x64-7.0.0-preview.23627.2.zip","installPath":".razor","platforms":["linux-musl"],"architectures":["x86_64"],"binaries":["./rzls"],"integrity":"A7FC04E2FA595EA722C6F792989D10127DBE5F3F9F783C54DDB71654BA011298"},{"id":"Razor","description":"Razor Language Server (Linux musl ARM64)","url":"https://download.visualstudio.microsoft.com/download/pr/9e436821-9ad7-4d14-81bd-69a8ab07838f/b59d0eb28baf935dcb81dc1aa91b8b37/razorlanguageserver-linux-musl-arm64-7.0.0-preview.23627.2.zip","installPath":".razor","platforms":["linux-musl"],"architectures":["arm64"],"binaries":["./rzls"],"integrity":"FF6B50056B128F675A29D89496328BF473929298FC83C06CEE387C15A698CBB5"},{"id":"Razor","description":"Razor Language Server (macOS / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/9e436821-9ad7-4d14-81bd-69a8ab07838f/d7dbdd01e9d1fc74e44de8bf5c2c3cf4/razorlanguageserver-osx-x64-7.0.0-preview.23627.2.zip","installPath":".razor","platforms":["darwin"],"architectures":["x86_64"],"binaries":["./rzls"],"integrity":"849FE69AA1012F65F66E402129D5934BEE363DB9D119A139AB8EF60FCC35CB03"},{"id":"Razor","description":"Razor Language Server (macOS ARM64)","url":"https://download.visualstudio.microsoft.com/download/pr/9e436821-9ad7-4d14-81bd-69a8ab07838f/0ad87856a78cf034b5e30423f51f42ca/razorlanguageserver-osx-arm64-7.0.0-preview.23627.2.zip","installPath":".razor","platforms":["darwin"],"architectures":["arm64"],"binaries":["./rzls"],"integrity":"AEF2F022652082D044F1CDB873F78701DAB3054DC9537ADA94527EC7A9D8F292"},{"id":"Razor","description":"Razor Language Server (Platform Agnostic)","url":"https://download.visualstudio.microsoft.com/download/pr/9e436821-9ad7-4d14-81bd-69a8ab07838f/2d81ded18f0c7efa1c7e37489093a613/razorlanguageserver-platformagnostic-7.0.0-preview.23627.2.zip","installPath":".razor","platforms":["neutral"],"architectures":["neutral"],"binaries":["./rzls"],"integrity":"D630874B6235B49D42219A3F22C84C5D25120BCD60ACEEA5D8ED4F14743A9BE1"},{"id":"RazorOmnisharp","description":"Razor Language Server for OmniSharp (Windows / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/aee63398-023f-48db-bba2-30162c68f0c4/8d42e62ea4051381c219b3e31bc4eced/razorlanguageserver-win-x64-7.0.0-preview.23363.1.zip","installPath":".razoromnisharp","platforms":["win32"],"architectures":["x86_64"]},{"id":"RazorOmnisharp","description":"Razor Language Server for OmniSharp (Windows / x86)","url":"https://download.visualstudio.microsoft.com/download/pr/aee63398-023f-48db-bba2-30162c68f0c4/e440c4f3a4a96334fe177513935fa010/razorlanguageserver-win-x86-7.0.0-preview.23363.1.zip","installPath":".razoromnisharp","platforms":["win32"],"architectures":["x86"]},{"id":"RazorOmnisharp","description":"Razor Language Server for OmniSharp (Windows / ARM64)","url":"https://download.visualstudio.microsoft.com/download/pr/aee63398-023f-48db-bba2-30162c68f0c4/4ef26e45cf32fe8d51c0e7dd21f1fef6/razorlanguageserver-win-arm64-7.0.0-preview.23363.1.zip","installPath":".razoromnisharp","platforms":["win32"],"architectures":["arm64"]},{"id":"RazorOmnisharp","description":"Razor Language Server for OmniSharp (Linux / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/aee63398-023f-48db-bba2-30162c68f0c4/6d4e23a3c7cf0465743950a39515a716/razorlanguageserver-linux-x64-7.0.0-preview.23363.1.zip","installPath":".razoromnisharp","platforms":["linux"],"architectures":["x86_64"],"binaries":["./rzls"]},{"id":"RazorOmnisharp","description":"Razor Language Server for OmniSharp (Linux ARM64)","url":"https://download.visualstudio.microsoft.com/download/pr/aee63398-023f-48db-bba2-30162c68f0c4/85deebd44647ebf65724cc291d722283/razorlanguageserver-linux-arm64-7.0.0-preview.23363.1.zip","installPath":".razoromnisharp","platforms":["linux"],"architectures":["arm64"],"binaries":["./rzls"]},{"id":"RazorOmnisharp","description":"Razor Language Server for OmniSharp (Linux musl / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/aee63398-023f-48db-bba2-30162c68f0c4/4f0caa94ae182785655efb15eafcef23/razorlanguageserver-linux-musl-x64-7.0.0-preview.23363.1.zip","installPath":".razoromnisharp","platforms":["linux-musl"],"architectures":["x86_64"],"binaries":["./rzls"]},{"id":"RazorOmnisharp","description":"Razor Language Server for OmniSharp (Linux musl ARM64)","url":"https://download.visualstudio.microsoft.com/download/pr/aee63398-023f-48db-bba2-30162c68f0c4/0a24828206a6f3b4bc743d058ef88ce7/razorlanguageserver-linux-musl-arm64-7.0.0-preview.23363.1.zip","installPath":".razoromnisharp","platforms":["linux-musl"],"architectures":["arm64"],"binaries":["./rzls"]},{"id":"RazorOmnisharp","description":"Razor Language Server for OmniSharp (macOS / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/aee63398-023f-48db-bba2-30162c68f0c4/2afcafaf41082989efcc10405abb9314/razorlanguageserver-osx-x64-7.0.0-preview.23363.1.zip","installPath":".razoromnisharp","platforms":["darwin"],"architectures":["x86_64"],"binaries":["./rzls"]},{"id":"RazorOmnisharp","description":"Razor Language Server for OmniSharp (macOS ARM64)","url":"https://download.visualstudio.microsoft.com/download/pr/aee63398-023f-48db-bba2-30162c68f0c4/8bf2ed2f00d481a5987e3eb5165afddd/razorlanguageserver-osx-arm64-7.0.0-preview.23363.1.zip","installPath":".razoromnisharp","platforms":["darwin"],"architectures":["arm64"],"binaries":["./rzls"]}],"engines":{"vscode":"^1.75.0"},"activationEvents":["onDebugInitialConfigurations","onDebugResolve:blazorwasm","onDebugResolve:coreclr","onDebugResolve:clr","onDebugResolve:monovsdbg","onDebugResolve:dotnet","onLanguage:csharp","onCommand:o.showOutput","onCommand:omnisharp.registerLanguageMiddleware","workspaceContains:project.json","workspaceContains:**/*.{csproj,sln,slnf,csx,cake}"],"contributes":{"themes":[{"label":"Visual Studio 2019 Dark","uiTheme":"vs-dark","path":"./themes/vs2019_dark.json"},{"label":"Visual Studio 2019 Light","uiTheme":"vs","path":"./themes/vs2019_light.json"}],"configuration":[{"title":"Project","order":0,"properties":{"dotnet.defaultSolution":{"type":"string","description":"The path of the default solution to be opened in the workspace, or set to 'disable' to skip it. (Previously `omnisharp.defaultLaunchSolution`)","order":0}}},{"title":"Text Editor","order":1,"properties":{"dotnet.implementType.insertionBehavior":{"type":"string","enum":["withOtherMembersOfTheSameKind","atTheEnd"],"default":"withOtherMembersOfTheSameKind","enumDescriptions":["Place them with other members of the same kind.","Place them at the end."],"description":"The insertion location of properties, events, and methods When implement interface or abstract class.","order":10},"dotnet.implementType.propertyGenerationBehavior":{"type":"string","enum":["preferThrowingProperties","preferAutoProperties"],"default":"preferThrowingProperties","enumDescriptions":["Prefer throwing properties.","Prefer auto properties."],"description":"Generation behavior of properties when implement interface or abstract class.","order":10},"dotnet.codeLens.enableReferencesCodeLens":{"type":"boolean","default":true,"description":"Specifies whether the references CodeLens should be shown. (Previously `csharp.referencesCodeLens.enabled`)"},"dotnet.codeLens.enableTestsCodeLens":{"type":"boolean","default":true,"description":"Specifies whether the run and debug test CodeLens should be shown. (Previously `csharp.testsCodeLens.enabled`)"},"dotnet.completion.showCompletionItemsFromUnimportedNamespaces":{"type":"boolean","default":true,"description":"Enables support for showing unimported types and unimported extension methods in completion lists. When committed, the appropriate using directive will be added at the top of the current file. (Previously `omnisharp.enableImportCompletion`)","order":20},"dotnet.completion.showNameCompletionSuggestions":{"type":"boolean","default":"true","description":"Perform automatic object name completion for the members that you have recently selected.","order":20},"dotnet.completion.provideRegexCompletions":{"type":"boolean","default":"true","description":"Show regular expressions in completion list.","order":20},"dotnet.backgroundAnalysis.analyzerDiagnosticsScope":{"type":"string","enum":["openFiles","fullSolution","none"],"default":"openFiles","enumDescriptions":["Open documents","Entire solution","None"],"description":"Run background code analysis for: (Previously `omnisharp.enableRoslynAnalyzers`)","order":30},"dotnet.backgroundAnalysis.compilerDiagnosticsScope":{"type":"string","enum":["openFiles","fullSolution","none"],"default":"openFiles","enumDescriptions":["Open documents","Entire solution","None"],"description":"Show compiler errors and warnings for:","order":30},"dotnet.highlighting.highlightRelatedRegexComponents":{"type":"boolean","default":"true","description":"Highlight related regular expression components under cursor.","order":40},"dotnet.highlighting.highlightRelatedJsonComponents":{"type":"boolean","default":"true","description":"Highlight related JSON components under cursor.","order":40},"csharp.inlayHints.enableInlayHintsForImplicitObjectCreation":{"type":"boolean","default":false,"description":"Show hints for implicit object creation","order":50},"csharp.inlayHints.enableInlayHintsForImplicitVariableTypes":{"type":"boolean","default":false,"description":"Show hints for variables with inferred types","order":50},"csharp.inlayHints.enableInlayHintsForLambdaParameterTypes":{"type":"boolean","default":false,"description":"Show hints for lambda parameter types","order":50},"csharp.inlayHints.enableInlayHintsForTypes":{"type":"boolean","default":false,"description":"Display inline type hints","order":50},"dotnet.inlayHints.enableInlayHintsForIndexerParameters":{"type":"boolean","default":false,"description":"Show hints for indexers","order":50},"dotnet.inlayHints.enableInlayHintsForLiteralParameters":{"type":"boolean","default":false,"description":"Show hints for literals","order":50},"dotnet.inlayHints.enableInlayHintsForObjectCreationParameters":{"type":"boolean","default":false,"description":"Show hints for 'new' expressions","order":50},"dotnet.inlayHints.enableInlayHintsForOtherParameters":{"type":"boolean","default":false,"description":"Show hints for everything else","order":50},"dotnet.inlayHints.enableInlayHintsForParameters":{"type":"boolean","default":false,"description":"Display inline parameter name hints","order":50},"dotnet.inlayHints.suppressInlayHintsForParametersThatDifferOnlyBySuffix":{"type":"boolean","default":false,"description":"Suppress hints when parameter names differ only by suffix","order":50},"dotnet.inlayHints.suppressInlayHintsForParametersThatMatchArgumentName":{"type":"boolean","default":false,"description":"Suppress hints when argument matches parameter name","order":50},"dotnet.inlayHints.suppressInlayHintsForParametersThatMatchMethodIntent":{"type":"boolean","default":false,"description":"Suppress hints when parameter name matches the method's intent","order":50},"dotnet.navigation.navigateToDecompiledSources":{"type":"boolean","default":"true","description":"Enable navigation to decomplied sources.","order":60},"dotnet.quickInfo.showRemarksInQuickInfo":{"type":"boolean","default":"true","description":"Show remarks information when display symbol.","order":70},"dotnet.symbolSearch.searchReferenceAssemblies":{"type":"boolean","default":true,"description":"Search symbols in reference assemblies. It affects features requires symbol searching, such as add imports.","order":80}}},{"title":"Debugger","order":8,"properties":{"csharp.debug.stopAtEntry":{"type":"boolean","markdownDescription":"If true, the debugger should stop at the entry point of the target. This option defaults to `false`.","default":false},"csharp.debug.console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["The target process's console input (stdin) and output (stdout/stderr) are routed through the VS Code Debug Console.","The target process will run inside VS Code's integrated terminal.","The target process will run inside its own external terminal. When using this mode, you will need to switch focus between Visual Studio Code and the external terminal window."],"markdownDescription":"**Note:** _This option is only used for console projects launched with the `dotnet` debug configuration type_.\n\nIndicates which console the target program should be launched into. See https://aka.ms/VSCode-CS-LaunchJson-Console for more information.","default":"internalConsole"},"csharp.debug.sourceFileMap":{"type":"object","markdownDescription":"Maps build-time paths to local source locations. All instances of build-time path will be replaced with the local source path.\n\nExample:\n\n`{\"<build-path>\":\"<local-source-path>\"}`","additionalProperties":{"type":"string"},"default":{}},"csharp.debug.justMyCode":{"type":"boolean","markdownDescription":"When enabled (the default), the debugger only displays and steps into user code (\"My Code\"), ignoring system code and other code that is optimized or that does not have debugging symbols. [More information](https://aka.ms/VSCode-CS-LaunchJson-JustMyCode)","default":true},"csharp.debug.requireExactSource":{"type":"boolean","markdownDescription":"Flag to require current source code to match the pdb. This option defaults to `true`.","default":true},"csharp.debug.enableStepFiltering":{"type":"boolean","markdownDescription":"Flag to enable stepping over Properties and Operators. This option defaults to `true`.","default":true},"csharp.debug.logging.exceptions":{"type":"boolean","markdownDescription":"Flag to determine whether exception messages should be logged to the output window. This option defaults to `true`.","default":true},"csharp.debug.logging.moduleLoad":{"type":"boolean","markdownDescription":"Flag to determine whether module load events should be logged to the output window. This option defaults to `true`.","default":true},"csharp.debug.logging.programOutput":{"type":"boolean","markdownDescription":"Flag to determine whether program output should be logged to the output window when not using an external console. This option defaults to `true`.","default":true},"csharp.debug.logging.browserStdOut":{"type":"boolean","markdownDescription":"Flag to determine if stdout text from the launching the web browser should be logged to the output window. This option defaults to `true`.","default":true},"csharp.debug.logging.elapsedTiming":{"type":"boolean","markdownDescription":"If true, protocol message logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took. This option defaults to `false`.","default":false},"csharp.debug.logging.threadExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when a thread in the target process exits. This option defaults to `false`.","default":false},"csharp.debug.logging.processExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when the target process exits, or debugging is stopped. This option defaults to `true`.","default":true},"csharp.debug.logging.engineLogging":{"type":"boolean","deprecationMessage":"The setting 'logging.engineLogging' has been deprecated in favor of 'logging.diagnosticsLog.protocolMessages'.","default":false},"csharp.debug.logging.diagnosticsLog.protocolMessages":{"type":"boolean","markdownDescription":"Flag to determine whether DAP protocol messages exchanged between the C# debugger and the UI should be logged to the output window. This option defaults to `false`.","default":false},"csharp.debug.logging.diagnosticsLog.dispatcherMessages":{"type":"string","enum":["none","error","important","normal"],"enumDescriptions":["Do not print additional diagnostic messages.","Print error-level diagnostic messages.","Print important diagnostic messages.","Print all non-verbose diagnostic messages."],"markdownDescription":"Controls which messages are printed to the output window from the debugger's dispatcher. If not specified, this will default to `none` unless one of the verbose log settings are enabled (`debugEngineAPITracing`, `debugRuntimeEventTracing`, `expressionEvaluationTracing` or `startDebuggingTracing`), in which case the default changes to `normal`.","default":"none"},"csharp.debug.logging.diagnosticsLog.debugEngineAPITracing":{"type":"string","enum":["none","error","all"],"enumDescriptions":["Disable tracing API calls","Print failures from debugger API calls.","Print all debugger API calls. This is very verbose."],"markdownDescription":"Controls if API calls to Microsoft.VisualStudio.Debugger.Engine/vsdebugeng.h should be printed to the output window. This option defaults to `none`.","default":"none"},"csharp.debug.logging.diagnosticsLog.debugRuntimeEventTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for events raised by the underlying runtime should be enabled. This option defaults to `false`.","default":false},"csharp.debug.logging.diagnosticsLog.expressionEvaluationTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for expression evaluation should be enabled. This option defaults to `false`.","default":false},"csharp.debug.logging.diagnosticsLog.startDebuggingTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for start debugging should be enabled. This option defaults to `false`.","default":false},"csharp.debug.logging.consoleUsageMessage":{"type":"boolean","description":"Controls if a message is logged when the target process calls a 'Console.Read*' API and stdin is redirected to the console.","default":true},"csharp.debug.suppressJITOptimizations":{"type":"boolean","markdownDescription":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. [More information](https://aka.ms/VSCode-CS-LaunchJson-SuppressJITOptimizations)","default":false},"csharp.debug.symbolOptions.searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"csharp.debug.symbolOptions.searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"csharp.debug.symbolOptions.searchNuGetOrgSymbolServer":{"type":"boolean","description":"If 'true' the NuGet.org symbol server (https​://symbols.nuget.org​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"csharp.debug.symbolOptions.cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":""},"csharp.debug.symbolOptions.moduleFilter.mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"csharp.debug.symbolOptions.moduleFilter.excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"csharp.debug.symbolOptions.moduleFilter.includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":[]},"csharp.debug.symbolOptions.moduleFilter.includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true},"csharp.debug.allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true},"dotnet.unitTestDebuggingOptions":{"type":"object","description":"Options to use with the debugger when launching for unit test debugging. (Previously `csharp.unitTestDebuggingOptions`)","default":{},"properties":{"sourceFileMap":{"type":"object","markdownDescription":"Maps build-time paths to local source locations. All instances of build-time path will be replaced with the local source path.\n\nExample:\n\n`{\"<build-path>\":\"<local-source-path>\"}`","additionalProperties":{"type":"string"}},"justMyCode":{"type":"boolean","markdownDescription":"When enabled (the default), the debugger only displays and steps into user code (\"My Code\"), ignoring system code and other code that is optimized or that does not have debugging symbols. [More information](https://aka.ms/VSCode-CS-LaunchJson-JustMyCode)","default":true},"requireExactSource":{"type":"boolean","markdownDescription":"Flag to require current source code to match the pdb. This option defaults to `true`.","default":true},"enableStepFiltering":{"type":"boolean","markdownDescription":"Flag to enable stepping over Properties and Operators. This option defaults to `true`.","default":true},"logging":{"description":"Flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","markdownDescription":"Flag to determine whether exception messages should be logged to the output window. This option defaults to `true`.","default":true},"moduleLoad":{"type":"boolean","markdownDescription":"Flag to determine whether module load events should be logged to the output window. This option defaults to `true`.","default":true},"programOutput":{"type":"boolean","markdownDescription":"Flag to determine whether program output should be logged to the output window when not using an external console. This option defaults to `true`.","default":true},"threadExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when a thread in the target process exits. This option defaults to `false`.","default":false},"processExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when the target process exits, or debugging is stopped. This option defaults to `true`.","default":true}}},"suppressJITOptimizations":{"type":"boolean","markdownDescription":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. [More information](https://aka.ms/VSCode-CS-LaunchJson-SuppressJITOptimizations)","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false,"searchNuGetOrgSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"searchNuGetOrgSymbolServer":{"type":"boolean","description":"If 'true' the NuGet.org symbol server (https​://symbols.nuget.org​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":""},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":[]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"markdownDescription":"Options to control how Source Link connects to web servers. [More information](https://aka.ms/VSCode-DotNet-SourceLink)","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","markdownDescription":"Is Source Link enabled for this URL? If unspecified, this option defaults to `true`.","default":"true"}}}},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true},"targetArchitecture":{"type":"string","markdownDescription":"[Only supported in local macOS debugging]\n\nThe architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are `x86_64` or `arm64`.","enum":["x86_64","arm64"]},"type":{"type":"string","enum":["coreclr","clr","monovsdbg"],"description":"Type type of code to debug. Can be either 'coreclr' for .NET Core debugging, or 'clr' for Desktop .NET Framework. 'clr' only works on Windows as the Desktop framework is Windows-only.","default":"coreclr"},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711}}},"dotnet.unitTests.runSettingsPath":{"type":"string","description":"Path to the .runsettings file which should be used when running unit tests. (Previously `omnisharp.testRunSettings`)"}}},{"title":"LSP Server","order":9,"properties":{"dotnet.preferCSharpExtension":{"scope":"resource","type":"boolean","default":true,"description":"Forces projects to load with the C# extension only.  This can be useful when using legacy project types that are not supported by C# Dev Kit. (Requires window reload)"},"dotnet.dotnetPath":{"type":"string","scope":"machine-overridable","description":"Specifies the path to a dotnet installation directory to use instead of the default system one. This only influences the dotnet installation to use for hosting the language server itself. Example: \"/home/username/mycustomdotnetdirectory\"."},"dotnet.server.path":{"type":"string","scope":"machine-overridable","description":"Specifies the absolute path to the server (LSP or O#) executable. When left empty the version pinned to the C# Extension is used. (Previously `omnisharp.path`)"},"dotnet.server.startTimeout":{"type":"number","scope":"machine-overridable","default":30000,"description":"Specifies a timeout (in ms) for the client to successfully start and connect to the language server."},"dotnet.server.waitForDebugger":{"type":"boolean","scope":"machine-overridable","default":false,"description":"Passes the --debug flag when launching the server to allow a debugger to be attached. (Previously `omnisharp.waitForDebugger`)"},"dotnet.server.trace":{"scope":"window","type":"string","enum":["Trace","Debug","Information","Warning","Error","Critical","None"],"default":"Information","description":"Sets the logging level for the language server"},"dotnet.server.extensionPaths":{"scope":"machine-overridable","type":["array",null],"items":{"type":"string"},"default":null,"description":"Override for path to language server --extension arguments"},"dotnet.server.crashDumpPath":{"scope":"machine-overridable","type":"string","default":null,"description":"Sets a folder path where crash dumps are written to if the language server crashes.  Must be writeable by the user."},"dotnet.projects.binaryLogPath":{"scope":"machine-overridable","type":"string","default":null,"description":"Sets a path where MSBuild binary logs are written to when loading projects, to help diagnose loading errors."},"dotnet.projects.enableAutomaticRestore":{"type":"boolean","default":true,"description":"Enables automatic NuGet restore if the extension detects assets are missing."},"razor.languageServer.directory":{"type":"string","scope":"machine-overridable","description":"Overrides the path to the Razor Language Server directory.","order":90},"razor.languageServer.debug":{"type":"boolean","scope":"machine-overridable","default":false,"description":"Specifies whether to wait for debug attach when launching the language server.","order":90},"razor.server.trace":{"scope":"window","type":"string","enum":["Trace","Debug","Information","Warning","Error","Critical","None"],"default":"Information","description":"%configuration.razor.server.trace%"}}},{"title":"OmniSharp","order":10,"properties":{"dotnet.server.useOmnisharp":{"type":"boolean","default":true,"description":"Switches to use the Omnisharp server for language features when enabled (requires restart). This option will not be honored with C# Dev Kit installed.","order":0},"csharp.format.enable":{"type":"boolean","default":true,"description":"Enable/disable default C# formatter (requires restart)."},"csharp.suppressDotnetInstallWarning":{"type":"boolean","default":false,"description":"Suppress the warning that the .NET Core SDK is not on the path."},"csharp.suppressDotnetRestoreNotification":{"type":"boolean","default":false,"description":"Suppress the notification window to perform a 'dotnet restore' when dependencies can't be resolved."},"csharp.suppressProjectJsonWarning":{"type":"boolean","default":false,"description":"Suppress the warning that project.json is no longer a supported project format for .NET Core applications"},"csharp.suppressBuildAssetsNotification":{"type":"boolean","default":false,"description":"Suppress the notification window to add missing assets to build or debug the application."},"csharp.suppressHiddenDiagnostics":{"type":"boolean","default":true,"description":"Suppress 'hidden' diagnostics (such as 'unnecessary using directives') from appearing in the editor or the Problems pane."},"csharp.referencesCodeLens.filteredSymbols":{"type":"array","items":{"type":"string"},"default":[],"description":"Array of custom symbol names for which CodeLens should be disabled."},"csharp.maxProjectFileCountForDiagnosticAnalysis":{"type":"number","default":1000,"description":"Specifies the maximum number of files for which diagnostics are reported for the whole workspace. If this limit is exceeded, diagnostics will be shown for currently opened files only. Specify 0 or less to disable the limit completely."},"csharp.semanticHighlighting.enabled":{"type":"boolean","default":true,"description":"Enable/disable Semantic Highlighting for C# files (Razor files currently unsupported). Defaults to false. Close open files for changes to take effect.","scope":"window"},"csharp.showOmnisharpLogOnError":{"type":"boolean","default":true,"description":"Shows the OmniSharp log in the Output pane when OmniSharp reports an error."},"omnisharp.useModernNet":{"type":"boolean","default":true,"scope":"window","title":"Use .NET 6 build of OmniSharp","description":"Use OmniSharp build for .NET 6. This version _does not_ support non-SDK-style .NET Framework projects, including Unity. SDK-style Framework, .NET Core, and .NET 5+ projects should see significant performance improvements."},"omnisharp.sdkPath":{"type":"string","scope":"window","description":"Specifies the path to a .NET SDK installation to use for project loading instead of the highest version installed. Applies when \"useModernNet\" is set to true. Example: /home/username/dotnet/sdks/6.0.300."},"omnisharp.sdkVersion":{"type":"string","scope":"window","description":"Specifies the version of the .NET SDK to use for project loading instead of the highest version installed. Applies when \"useModernNet\" is set to true. Example: 6.0.300."},"omnisharp.sdkIncludePrereleases":{"type":"boolean","scope":"window","default":true,"description":"Specifies whether to include preview versions of the .NET SDK when determining which version to use for project loading. Applies when \"useModernNet\" is set to true."},"omnisharp.monoPath":{"type":"string","scope":"machine","description":"Specifies the path to a mono installation to use when \"useModernNet\" is set to false, instead of the default system one. Example: \"/Library/Frameworks/Mono.framework/Versions/Current\""},"omnisharp.loggingLevel":{"type":"string","default":"information","enum":["trace","debug","information","warning","error","critical"],"description":"Specifies the level of logging output from the OmniSharp server."},"omnisharp.autoStart":{"type":"boolean","default":true,"description":"Specifies whether the OmniSharp server will be automatically started or not. If false, OmniSharp can be started with the 'Restart OmniSharp' command"},"omnisharp.projectFilesExcludePattern":{"type":"string","default":"**/node_modules/**,**/.git/**,**/bower_components/**","description":"The exclude pattern used by OmniSharp to find all project files."},"omnisharp.projectLoadTimeout":{"type":"number","default":60,"description":"The time Visual Studio Code will wait for the OmniSharp server to start. Time is expressed in seconds."},"omnisharp.maxProjectResults":{"type":"number","default":250,"description":"The maximum number of projects to be shown in the 'Select Project' dropdown (maximum 250)."},"omnisharp.useEditorFormattingSettings":{"type":"boolean","default":true,"description":"Specifes whether OmniSharp should use VS Code editor settings for C# code formatting (use of tabs, indentation size)."},"omnisharp.minFindSymbolsFilterLength":{"type":"number","default":0,"description":"The minimum number of characters to enter before 'Go to Symbol in Workspace' operation shows any results."},"omnisharp.maxFindSymbolsItems":{"type":"number","default":1000,"description":"The maximum number of items that 'Go to Symbol in Workspace' operation can show. The limit is applied only when a positive number is specified here."},"omnisharp.disableMSBuildDiagnosticWarning":{"type":"boolean","default":false,"description":"Specifies whether notifications should be shown if OmniSharp encounters warnings or errors loading a project. Note that these warnings/errors are always emitted to the OmniSharp log"},"omnisharp.enableMsBuildLoadProjectsOnDemand":{"type":"boolean","default":false,"description":"If true, MSBuild project system will only load projects for files that were opened in the editor. This setting is useful for big C# codebases and allows for faster initialization of code navigation features only for projects that are relevant to code that is being edited. With this setting enabled OmniSharp may load fewer projects and may thus display incomplete reference lists for symbols."},"omnisharp.enableEditorConfigSupport":{"type":"boolean","default":true,"description":"Enables support for reading code style, naming convention and analyzer settings from .editorconfig."},"omnisharp.enableDecompilationSupport":{"type":"boolean","default":false,"scope":"machine","description":"Enables support for decompiling external references instead of viewing metadata."},"omnisharp.enableLspDriver":{"type":"boolean","default":false,"description":"Enables support for the experimental language protocol based engine (requires reload to setup bindings correctly)"},"omnisharp.organizeImportsOnFormat":{"type":"boolean","default":false,"description":"Specifies whether 'using' directives should be grouped and sorted during document formatting."},"omnisharp.enableAsyncCompletion":{"type":"boolean","default":false,"description":"(EXPERIMENTAL) Enables support for resolving completion edits asynchronously. This can speed up time to show the completion list, particularly override and partial method completion lists, at the cost of slight delays after inserting a completion item. Most completion items will have no noticeable impact with this feature, but typing immediately after inserting an override or partial method completion, before the insert is completed, can have unpredictable results."},"omnisharp.dotNetCliPaths":{"type":"array","items":{"type":"string"},"description":"Paths to a local download of the .NET CLI to use for running any user code.","uniqueItems":true},"razor.plugin.path":{"type":"string","scope":"machine","description":"Overrides the path to the Razor plugin dll."},"razor.devmode":{"type":"boolean","default":false,"description":"Forces the omnisharp-vscode extension to run in a mode that enables local Razor.VSCode deving."},"razor.format.enable":{"type":"boolean","scope":"window","default":true,"description":"Enable/disable default Razor formatter."},"razor.completion.commitElementsWithSpace":{"type":"boolean","scope":"window","default":"false","description":"Specifies whether to commit tag helper and component elements with a space."}}}],"jsonValidation":[{"fileMatch":["appsettings.json","appsettings.*.json"],"url":"https://json.schemastore.org/appsettings"},{"fileMatch":"project.json","url":"http://json.schemastore.org/project"},{"fileMatch":"omnisharp.json","url":"http://json.schemastore.org/omnisharp"},{"fileMatch":"global.json","url":"http://json.schemastore.org/global"},{"fileMatch":"launchSettings.json","url":"https://json.schemastore.org/launchsettings.json"}],"commands":[{"command":"o.restart","title":"Restart OmniSharp","category":"OmniSharp","enablement":"dotnet.server.activationContext == 'OmniSharp'"},{"command":"o.pickProjectAndStart","title":"Select Project","category":"OmniSharp","enablement":"dotnet.server.activationContext == 'OmniSharp'"},{"command":"dotnet.openSolution","title":"Open Solution","category":".NET","enablement":"dotnet.server.activationContext == 'Roslyn'"},{"command":"o.fixAll.solution","title":"Fix all occurrences of a code issue within solution","category":"OmniSharp","enablement":"dotnet.server.activationContext == 'OmniSharp'"},{"command":"o.fixAll.project","title":"Fix all occurrences of a code issue within project","category":"OmniSharp","enablement":"dotnet.server.activationContext == 'OmniSharp'"},{"command":"o.fixAll.document","title":"Fix all occurrences of a code issue within document","category":"OmniSharp","enablement":"dotnet.server.activationContext == 'OmniSharp'"},{"command":"o.reanalyze.allProjects","title":"Analyze all projects","category":"OmniSharp","enablement":"dotnet.server.activationContext == 'OmniSharp'"},{"command":"o.reanalyze.currentProject","title":"Analyze current project","category":"OmniSharp","enablement":"dotnet.server.activationContext == 'OmniSharp'"},{"command":"dotnet.generateAssets","title":"Generate Assets for Build and Debug","category":".NET"},{"command":"dotnet.restore.project","title":"Restore Project","category":".NET","enablement":"dotnet.server.activationContext == 'Roslyn' || dotnet.server.activationContext == 'OmniSharp'"},{"command":"dotnet.restore.all","title":"Restore All Projects","category":".NET","enablement":"dotnet.server.activationContext == 'Roslyn' || dotnet.server.activationContext == 'OmniSharp'"},{"command":"csharp.listProcess","title":"List process for attach","category":"CSharp"},{"command":"csharp.listRemoteProcess","title":"List processes on remote connection for attach","category":"CSharp"},{"command":"csharp.listRemoteDockerProcess","title":"List processes on Docker connection","category":"CSharp"},{"command":"csharp.attachToProcess","title":"Attach to a .NET 5+ or .NET Core process","category":"Debug"},{"command":"csharp.reportIssue","title":"Report an issue","category":"CSharp"},{"command":"csharp.showDecompilationTerms","title":"Show the decompiler terms agreement","category":"CSharp","enablement":"dotnet.server.activationContext == 'OmniSharp'"},{"command":"extension.showRazorCSharpWindow","title":"Show Razor CSharp","category":"Razor"},{"command":"extension.showRazorHtmlWindow","title":"Show Razor Html","category":"Razor"},{"command":"razor.reportIssue","title":"Report a Razor issue","category":"Razor"},{"command":"dotnet.test.runTestsInContext","title":"Run Tests in Context","category":".NET","enablement":"dotnet.server.activationContext == 'Roslyn' || dotnet.server.activationContext == 'OmniSharp'"},{"command":"dotnet.test.debugTestsInContext","title":"Debug Tests in Context","category":".NET","enablement":"dotnet.server.activationContext == 'Roslyn' || dotnet.server.activationContext == 'OmniSharp'"},{"command":"dotnet.restartServer","title":"Restart Language Server","category":".NET","enablement":"dotnet.server.activationContext != 'OmniSharp'"}],"keybindings":[{"command":"o.showOutput","key":"Ctrl+Shift+F9","mac":"Cmd+Shift+F9"}],"snippets":[{"language":"csharp","path":"./snippets/csharp.json"}],"breakpoints":[{"language":"csharp"},{"language":"razor"},{"language":"qsharp"},{"language":"aspnetcorerazor"}],"debuggers":[{"type":"coreclr","label":".NET 5+ and .NET Core","hiddenWhen":"dotnet.debug.serviceBrokerAvailable","languages":["csharp","razor","qsharp","aspnetcorerazor"],"variables":{"pickProcess":"csharp.listProcess","pickRemoteProcess":"csharp.listRemoteProcess","pickRemoteDockerProcess":"csharp.listRemoteDockerProcess"},"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","configurationAttributes":{"launch":{"type":"object","required":["program"],"properties":{"program":{"type":"string","markdownDescription":"Path to the application dll or .NET Core host executable to launch.\nThis property normally takes the form: `${workspaceFolder}/bin/Debug/(target-framework)/(project-name.dll)`\n\nExample: `${workspaceFolder}/bin/Debug/netcoreapp1.1/MyProject.dll`\n\nWhere:\n`(target-framework)` is the framework that the debugged project is being built for. This is normally found in the project file as the `TargetFramework` property.\n\n`(project-name.dll)` is the name of debugged project's build output dll. This is normally the same as the project file name but with a '.dll' extension.","default":"${workspaceFolder}/bin/Debug/<insert-target-framework-here>/<insert-project-name-here>.dll"},"cwd":{"type":"string","description":"Path to the working directory of the program being debugged. Default is the current workspace.","default":"${workspaceFolder}"},"args":{"anyOf":[{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the program.","default":""}]},"stopAtEntry":{"type":"boolean","markdownDescription":"If true, the debugger should stop at the entry point of the target. This option defaults to `false`.","default":false},"launchBrowser":{"description":"Describes options to launch a web browser as part of launch","default":{"enabled":true},"type":"object","required":["enabled"],"properties":{"enabled":{"type":"boolean","description":"Whether web browser launch is enabled. This option defaults to `true`.","default":true},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. This is used only if the platform-specific element (`osx`, `linux` or `windows`) doesn't specify a value for `args`. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"},"osx":{"description":"OSX-specific web launch configuration options. By default, this will start the browser using `open`.","default":{"command":"open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser.","default":"open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"linux":{"description":"Linux-specific web launch configuration options. By default, this will start the browser using `xdg-open`.","default":{"command":"xdg-open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser.","default":"xdg-open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"windows":{"description":"Windows-specific web launch configuration options. By default, this will start the browser using `cmd /c start`.","default":{"command":"cmd.exe","args":"/C start ${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser.","default":"cmd.exe"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"/C start ${auto-detect-url}"}}}}},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program.","default":{}},"envFile":{"type":"string","markdownDescription":"Environment variables passed to the program by a file. E.g. `${workspaceFolder}/.env`","default":"${workspaceFolder}/.env"},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["The target process's console input (stdin) and output (stdout/stderr) are routed through the VS Code Debug Console.","The target process will run inside VS Code's integrated terminal.","The target process will run inside its own external terminal. When using this mode, you will need to switch focus between Visual Studio Code and the external terminal window."],"markdownDescription":"Indicates which console the target program should be launched into. See https://aka.ms/VSCode-CS-LaunchJson-Console for more information.","settingsDescription":"**Note:** _This option is only used for console projects launched with the `dotnet` debug configuration type_.\n\nIndicates which console the target program should be launched into. See https://aka.ms/VSCode-CS-LaunchJson-Console for more information.","default":"internalConsole"},"externalConsole":{"type":"boolean","markdownDescription":"Attribute `externalConsole` is deprecated, use `console` instead. This option defaults to `false`.","default":false},"launchSettingsFilePath":{"type":"string","markdownDescription":"The path to a launchSettings.json file. If this isn't set, the debugger will search in `{cwd}/Properties/launchSettings.json`.","default":"${workspaceFolder}/Properties/launchSettings.json"},"launchSettingsProfile":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"If specified, indicates the name of the profile in launchSettings.json to use. This is ignored if launchSettings.json is not found. launchSettings.json will be read from the path specified should be the 'launchSettingsFilePath' property, or {cwd}/Properties/launchSettings.json if that isn't set. If this is set to null or an empty string then launchSettings.json is ignored. If this value is not specified the first 'Project' profile will be used.","default":"<insert-profile-name>"},"sourceFileMap":{"type":"object","markdownDescription":"Maps build-time paths to local source locations. All instances of build-time path will be replaced with the local source path.\n\nExample:\n\n`{\"<build-path>\":\"<local-source-path>\"}`","additionalProperties":{"type":"string"},"default":{}},"justMyCode":{"type":"boolean","markdownDescription":"When enabled (the default), the debugger only displays and steps into user code (\"My Code\"), ignoring system code and other code that is optimized or that does not have debugging symbols. [More information](https://aka.ms/VSCode-CS-LaunchJson-JustMyCode)","default":true},"requireExactSource":{"type":"boolean","markdownDescription":"Flag to require current source code to match the pdb. This option defaults to `true`.","default":true},"enableStepFiltering":{"type":"boolean","markdownDescription":"Flag to enable stepping over Properties and Operators. This option defaults to `true`.","default":true},"logging":{"description":"Flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","markdownDescription":"Flag to determine whether exception messages should be logged to the output window. This option defaults to `true`.","default":true},"moduleLoad":{"type":"boolean","markdownDescription":"Flag to determine whether module load events should be logged to the output window. This option defaults to `true`.","default":true},"programOutput":{"type":"boolean","markdownDescription":"Flag to determine whether program output should be logged to the output window when not using an external console. This option defaults to `true`.","default":true},"browserStdOut":{"type":"boolean","markdownDescription":"Flag to determine if stdout text from the launching the web browser should be logged to the output window. This option defaults to `true`.","default":true},"elapsedTiming":{"type":"boolean","markdownDescription":"If true, protocol message logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took. This option defaults to `false`.","default":false},"threadExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when a thread in the target process exits. This option defaults to `false`.","default":false},"processExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when the target process exits, or debugging is stopped. This option defaults to `true`.","default":true},"engineLogging":{"type":"boolean","deprecationMessage":"The setting 'logging.engineLogging' has been deprecated in favor of 'logging.diagnosticsLog.protocolMessages'.","default":false},"diagnosticsLog":{"description":"Settings to control which messages are printed to the output window from the debugger's diagnostics log. This log is meant to help troubleshoot problems with the debugger.","type":"object","required":[],"default":{},"properties":{"protocolMessages":{"type":"boolean","markdownDescription":"Flag to determine whether DAP protocol messages exchanged between the C# debugger and the UI should be logged to the output window. This option defaults to `false`.","default":false},"dispatcherMessages":{"type":"string","enum":["none","error","important","normal"],"enumDescriptions":["Do not print additional diagnostic messages.","Print error-level diagnostic messages.","Print important diagnostic messages.","Print all non-verbose diagnostic messages."],"markdownDescription":"Controls which messages are printed to the output window from the debugger's dispatcher. If not specified, this will default to `none` unless one of the verbose log settings are enabled (`debugEngineAPITracing`, `debugRuntimeEventTracing`, `expressionEvaluationTracing` or `startDebuggingTracing`), in which case the default changes to `normal`.","default":"none"},"debugEngineAPITracing":{"type":"string","enum":["none","error","all"],"enumDescriptions":["Disable tracing API calls","Print failures from debugger API calls.","Print all debugger API calls. This is very verbose."],"markdownDescription":"Controls if API calls to Microsoft.VisualStudio.Debugger.Engine/vsdebugeng.h should be printed to the output window. This option defaults to `none`.","default":"none"},"debugRuntimeEventTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for events raised by the underlying runtime should be enabled. This option defaults to `false`.","default":false},"expressionEvaluationTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for expression evaluation should be enabled. This option defaults to `false`.","default":false},"startDebuggingTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for start debugging should be enabled. This option defaults to `false`.","default":false}}},"consoleUsageMessage":{"type":"boolean","description":"Controls if a message is logged when the target process calls a 'Console.Read*' API and stdin is redirected to the console.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example /usr/bin/netcoredbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","markdownDescription":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. [More information](https://aka.ms/VSCode-CS-LaunchJson-SuppressJITOptimizations)","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false,"searchNuGetOrgSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"searchNuGetOrgSymbolServer":{"type":"boolean","description":"If 'true' the NuGet.org symbol server (https​://symbols.nuget.org​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":""},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":[]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"markdownDescription":"Options to control how Source Link connects to web servers. [More information](https://aka.ms/VSCode-DotNet-SourceLink)","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","markdownDescription":"Is Source Link enabled for this URL? If unspecified, this option defaults to `true`.","default":"true"}}}},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true},"targetOutputLogPath":{"type":"string","description":"When set, text that the target application writes to stdout and stderr (ex: Console.WriteLine) will be saved to the specified file. This option is ignored if console is set to something other than internalConsole. E.g. '${workspaceFolder}/out.txt'","default":""},"targetArchitecture":{"type":"string","markdownDescription":"[Only supported in local macOS debugging]\n\nThe architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are `x86_64` or `arm64`.","enum":["x86_64","arm64"]},"checkForDevCert":{"type":"boolean","description":"If you are launching a web project on Windows or macOS and this is enabled, the debugger will check if the computer has a self-signed HTTPS certificate used to develop web servers running on https endpoints. If unspecified, defaults to true when `serverReadyAction` is set. This option does nothing on Linux, VS Code remote, and VS Code Web UI scenarios. If the HTTPS certificate is not found or isn't trusted, the user will be prompted to install/trust it.","default":true}}},"attach":{"type":"object","required":[],"properties":{"processName":{"type":"string","default":"","markdownDescription":"The process name to attach to. If this is used, `processId` should not be used."},"processId":{"anyOf":[{"type":"string","markdownDescription":"The process id to attach to. Use \"\" to get a list of running processes to attach to. If `processId` used, `processName` should not be used.","default":""},{"type":"integer","markdownDescription":"The process id to attach to. Use \"\" to get a list of running processes to attach to. If `processId` used, `processName` should not be used.","default":0}]},"sourceFileMap":{"type":"object","markdownDescription":"Maps build-time paths to local source locations. All instances of build-time path will be replaced with the local source path.\n\nExample:\n\n`{\"<build-path>\":\"<local-source-path>\"}`","additionalProperties":{"type":"string"}},"justMyCode":{"type":"boolean","markdownDescription":"When enabled (the default), the debugger only displays and steps into user code (\"My Code\"), ignoring system code and other code that is optimized or that does not have debugging symbols. [More information](https://aka.ms/VSCode-CS-LaunchJson-JustMyCode)","default":true},"requireExactSource":{"type":"boolean","markdownDescription":"Flag to require current source code to match the pdb. This option defaults to `true`.","default":true},"enableStepFiltering":{"type":"boolean","markdownDescription":"Flag to enable stepping over Properties and Operators. This option defaults to `true`.","default":true},"logging":{"description":"Flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","markdownDescription":"Flag to determine whether exception messages should be logged to the output window. This option defaults to `true`.","default":true},"moduleLoad":{"type":"boolean","markdownDescription":"Flag to determine whether module load events should be logged to the output window. This option defaults to `true`.","default":true},"programOutput":{"type":"boolean","markdownDescription":"Flag to determine whether program output should be logged to the output window when not using an external console. This option defaults to `true`.","default":true},"browserStdOut":{"type":"boolean","markdownDescription":"Flag to determine if stdout text from the launching the web browser should be logged to the output window. This option defaults to `true`.","default":true},"elapsedTiming":{"type":"boolean","markdownDescription":"If true, protocol message logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took. This option defaults to `false`.","default":false},"threadExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when a thread in the target process exits. This option defaults to `false`.","default":false},"processExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when the target process exits, or debugging is stopped. This option defaults to `true`.","default":true},"engineLogging":{"type":"boolean","deprecationMessage":"The setting 'logging.engineLogging' has been deprecated in favor of 'logging.diagnosticsLog.protocolMessages'.","default":false},"diagnosticsLog":{"description":"Settings to control which messages are printed to the output window from the debugger's diagnostics log. This log is meant to help troubleshoot problems with the debugger.","type":"object","required":[],"default":{},"properties":{"protocolMessages":{"type":"boolean","markdownDescription":"Flag to determine whether DAP protocol messages exchanged between the C# debugger and the UI should be logged to the output window. This option defaults to `false`.","default":false},"dispatcherMessages":{"type":"string","enum":["none","error","important","normal"],"enumDescriptions":["Do not print additional diagnostic messages.","Print error-level diagnostic messages.","Print important diagnostic messages.","Print all non-verbose diagnostic messages."],"markdownDescription":"Controls which messages are printed to the output window from the debugger's dispatcher. If not specified, this will default to `none` unless one of the verbose log settings are enabled (`debugEngineAPITracing`, `debugRuntimeEventTracing`, `expressionEvaluationTracing` or `startDebuggingTracing`), in which case the default changes to `normal`.","default":"none"},"debugEngineAPITracing":{"type":"string","enum":["none","error","all"],"enumDescriptions":["Disable tracing API calls","Print failures from debugger API calls.","Print all debugger API calls. This is very verbose."],"markdownDescription":"Controls if API calls to Microsoft.VisualStudio.Debugger.Engine/vsdebugeng.h should be printed to the output window. This option defaults to `none`.","default":"none"},"debugRuntimeEventTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for events raised by the underlying runtime should be enabled. This option defaults to `false`.","default":false},"expressionEvaluationTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for expression evaluation should be enabled. This option defaults to `false`.","default":false},"startDebuggingTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for start debugging should be enabled. This option defaults to `false`.","default":false}}},"consoleUsageMessage":{"type":"boolean","description":"Controls if a message is logged when the target process calls a 'Console.Read*' API and stdin is redirected to the console.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example /usr/bin/netcoredbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","markdownDescription":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. [More information](https://aka.ms/VSCode-CS-LaunchJson-SuppressJITOptimizations)","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false,"searchNuGetOrgSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"searchNuGetOrgSymbolServer":{"type":"boolean","description":"If 'true' the NuGet.org symbol server (https​://symbols.nuget.org​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":""},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":[]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"markdownDescription":"Options to control how Source Link connects to web servers. [More information](https://aka.ms/VSCode-DotNet-SourceLink)","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","markdownDescription":"Is Source Link enabled for this URL? If unspecified, this option defaults to `true`.","default":"true"}}}},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true},"targetArchitecture":{"type":"string","markdownDescription":"[Only supported in local macOS debugging]\n\nThe architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are `x86_64` or `arm64`.","enum":["x86_64","arm64"]}}}},"configurationSnippets":[{"label":".NET: Launch Executable file (Console)","description":"This snippet is used to launch a new process under the .NET debugger (coreclr), specifying the path to the executable to launch. In most cases, the \".NET: Launch C# project\" snippet is a better choice. This snippet is useful when the project was built outside this VS Code instance or you want to host your .NET Code in a custom executable, such as a specific version of 'dotnet.exe'/'dotnet' or the .NET Code is hosted by a native application. This snippet is for console applications.","body":{"name":".NET Core Launch (console)","type":"coreclr","request":"launch","preLaunchTask":"build","program":"^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\"","stopAtEntry":false,"console":"internalConsole"}},{"label":".NET: Attach to a .NET process","description":"Attach the .NET debugger (coreclr) to a running process. This can also be done using the 'Attach to a .NET 5+ or .NET Core process' command.","body":{"name":".NET Core Attach","type":"coreclr","request":"attach"}},{"label":".NET: Launch Executable file (Web)","description":"This snippet is used to launch a new process under the .NET debugger (coreclr), specifying the path to the executable to launch. In most cases, the \".NET: Launch C# project\" snippet is a better choice. This snippet is useful when the project was built outside this VS Code instance or you want to host your .NET Code in a custom executable, such as a specific version of 'dotnet.exe'/'dotnet' or the .NET Code is hosted by a native application. This snippet is for web (ASP.NET Core) applications.","body":{"name":".NET Core Launch (web)","type":"coreclr","request":"launch","preLaunchTask":"build","program":"^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\"","stopAtEntry":false,"serverReadyAction":{"action":"openExternally","pattern":"\\\\bNow listening on:\\\\s+(https?://\\\\S+)"},"env":{"ASPNETCORE_ENVIRONMENT":"Development"},"sourceFileMap":{"/Views":"^\"\\${workspaceFolder}/Views\""}}},{"label":".NET: Remote debugging - Launch Executable file (Console)","description":"This snippet shows how to remote debug .NET Code **without** using VS Code remoting. It should be used in cases where you want to build your project locally but run it on another computer.","body":{"name":".NET Core Launch (console)","type":"coreclr","request":"launch","preLaunchTask":"build","program":"^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\"","stopAtEntry":false,"console":"internalConsole","pipeTransport":{"pipeCwd":"^\"\\${workspaceFolder}\"","pipeProgram":"^\"${3:enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'}\"","pipeArgs":[],"debuggerPath":"^\"${4:enter the path for the debugger on the target machine, for example /usr/bin/netcoredbg}\""}}},{"label":".NET: Remote debugging - Attach to a .NET process","description":"This snippet shows how to remote debug .NET Code **without** using VS Code remoting. It should be used in cases where you want to build your project locally but run it on another computer.","body":{"name":".NET Core Attach","type":"coreclr","request":"attach","pipeTransport":{"pipeCwd":"^\"\\${workspaceFolder}\"","pipeProgram":"^\"${1:enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'}\"","pipeArgs":[],"debuggerPath":"^\"${2:enter the path for the debugger on the target machine, for example /usr/bin/netcoredbg}\""}}},{"label":".NET: Web Assembly - Launch hosted Blazor project","description":"This snippet is used to launch a new process under the Blazor WebAssembly debugger (blazorwasm), specifying the path to the executable to launch. In most cases, the \".NET: Launch C# project\" snippet is a better choice, but this snippet can be used to have full control over all launch options. This snippet is for hosted Blazor projects, which is a project that has a backend ASP.NET Core app to serve its files.","body":{"name":"Launch and Debug Hosted Blazor WebAssembly App","type":"blazorwasm","request":"launch","hosted":true,"program":"^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","cwd":"^\"\\${workspaceFolder}\""}},{"label":".NET: Web Assembly - Launch standalone Blazor project","description":"This snippet is used to launch a new process under the Blazor WebAssembly debugger (blazorwasm). In most cases, the \".NET: Launch C# project\" snippet is a better choice, but this snippet can be used to have full control over all launch options. This snippet is for standalone Blazor projects, which is a project that does not have a backend ASP.NET Core app to serve its files.","body":{"name":"Launch and Debug Standalone Blazor WebAssembly App","type":"blazorwasm","request":"launch","cwd":"^\"\\${workspaceFolder}\""}}]},{"type":"clr","when":"workspacePlatform == windows","hiddenWhen":"true","label":".NET Framework 4.x","languages":["csharp","razor","qsharp","aspnetcorerazor"],"variables":{"pickProcess":"csharp.listProcess","pickRemoteProcess":"csharp.listRemoteProcess","pickRemoteDockerProcess":"csharp.listRemoteDockerProcess"},"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","configurationAttributes":{"launch":{"type":"object","required":["program"],"properties":{"program":{"type":"string","markdownDescription":"Path to the application dll or .NET Core host executable to launch.\nThis property normally takes the form: `${workspaceFolder}/bin/Debug/(target-framework)/(project-name.dll)`\n\nExample: `${workspaceFolder}/bin/Debug/netcoreapp1.1/MyProject.dll`\n\nWhere:\n`(target-framework)` is the framework that the debugged project is being built for. This is normally found in the project file as the `TargetFramework` property.\n\n`(project-name.dll)` is the name of debugged project's build output dll. This is normally the same as the project file name but with a '.dll' extension.","default":"${workspaceFolder}/bin/Debug/<insert-target-framework-here>/<insert-project-name-here>.dll"},"cwd":{"type":"string","description":"Path to the working directory of the program being debugged. Default is the current workspace.","default":"${workspaceFolder}"},"args":{"anyOf":[{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the program.","default":""}]},"stopAtEntry":{"type":"boolean","markdownDescription":"If true, the debugger should stop at the entry point of the target. This option defaults to `false`.","default":false},"launchBrowser":{"description":"Describes options to launch a web browser as part of launch","default":{"enabled":true},"type":"object","required":["enabled"],"properties":{"enabled":{"type":"boolean","description":"Whether web browser launch is enabled. This option defaults to `true`.","default":true},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. This is used only if the platform-specific element (`osx`, `linux` or `windows`) doesn't specify a value for `args`. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"},"osx":{"description":"OSX-specific web launch configuration options. By default, this will start the browser using `open`.","default":{"command":"open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser.","default":"open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"linux":{"description":"Linux-specific web launch configuration options. By default, this will start the browser using `xdg-open`.","default":{"command":"xdg-open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser.","default":"xdg-open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"windows":{"description":"Windows-specific web launch configuration options. By default, this will start the browser using `cmd /c start`.","default":{"command":"cmd.exe","args":"/C start ${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser.","default":"cmd.exe"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"/C start ${auto-detect-url}"}}}}},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program.","default":{}},"envFile":{"type":"string","markdownDescription":"Environment variables passed to the program by a file. E.g. `${workspaceFolder}/.env`","default":"${workspaceFolder}/.env"},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["The target process's console input (stdin) and output (stdout/stderr) are routed through the VS Code Debug Console.","The target process will run inside VS Code's integrated terminal.","The target process will run inside its own external terminal. When using this mode, you will need to switch focus between Visual Studio Code and the external terminal window."],"markdownDescription":"Indicates which console the target program should be launched into. See https://aka.ms/VSCode-CS-LaunchJson-Console for more information.","settingsDescription":"**Note:** _This option is only used for console projects launched with the `dotnet` debug configuration type_.\n\nIndicates which console the target program should be launched into. See https://aka.ms/VSCode-CS-LaunchJson-Console for more information.","default":"internalConsole"},"externalConsole":{"type":"boolean","markdownDescription":"Attribute `externalConsole` is deprecated, use `console` instead. This option defaults to `false`.","default":false},"launchSettingsFilePath":{"type":"string","markdownDescription":"The path to a launchSettings.json file. If this isn't set, the debugger will search in `{cwd}/Properties/launchSettings.json`.","default":"${workspaceFolder}/Properties/launchSettings.json"},"launchSettingsProfile":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"If specified, indicates the name of the profile in launchSettings.json to use. This is ignored if launchSettings.json is not found. launchSettings.json will be read from the path specified should be the 'launchSettingsFilePath' property, or {cwd}/Properties/launchSettings.json if that isn't set. If this is set to null or an empty string then launchSettings.json is ignored. If this value is not specified the first 'Project' profile will be used.","default":"<insert-profile-name>"},"sourceFileMap":{"type":"object","markdownDescription":"Maps build-time paths to local source locations. All instances of build-time path will be replaced with the local source path.\n\nExample:\n\n`{\"<build-path>\":\"<local-source-path>\"}`","additionalProperties":{"type":"string"},"default":{}},"justMyCode":{"type":"boolean","markdownDescription":"When enabled (the default), the debugger only displays and steps into user code (\"My Code\"), ignoring system code and other code that is optimized or that does not have debugging symbols. [More information](https://aka.ms/VSCode-CS-LaunchJson-JustMyCode)","default":true},"requireExactSource":{"type":"boolean","markdownDescription":"Flag to require current source code to match the pdb. This option defaults to `true`.","default":true},"enableStepFiltering":{"type":"boolean","markdownDescription":"Flag to enable stepping over Properties and Operators. This option defaults to `true`.","default":true},"logging":{"description":"Flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","markdownDescription":"Flag to determine whether exception messages should be logged to the output window. This option defaults to `true`.","default":true},"moduleLoad":{"type":"boolean","markdownDescription":"Flag to determine whether module load events should be logged to the output window. This option defaults to `true`.","default":true},"programOutput":{"type":"boolean","markdownDescription":"Flag to determine whether program output should be logged to the output window when not using an external console. This option defaults to `true`.","default":true},"browserStdOut":{"type":"boolean","markdownDescription":"Flag to determine if stdout text from the launching the web browser should be logged to the output window. This option defaults to `true`.","default":true},"elapsedTiming":{"type":"boolean","markdownDescription":"If true, protocol message logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took. This option defaults to `false`.","default":false},"threadExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when a thread in the target process exits. This option defaults to `false`.","default":false},"processExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when the target process exits, or debugging is stopped. This option defaults to `true`.","default":true},"engineLogging":{"type":"boolean","deprecationMessage":"The setting 'logging.engineLogging' has been deprecated in favor of 'logging.diagnosticsLog.protocolMessages'.","default":false},"diagnosticsLog":{"description":"Settings to control which messages are printed to the output window from the debugger's diagnostics log. This log is meant to help troubleshoot problems with the debugger.","type":"object","required":[],"default":{},"properties":{"protocolMessages":{"type":"boolean","markdownDescription":"Flag to determine whether DAP protocol messages exchanged between the C# debugger and the UI should be logged to the output window. This option defaults to `false`.","default":false},"dispatcherMessages":{"type":"string","enum":["none","error","important","normal"],"enumDescriptions":["Do not print additional diagnostic messages.","Print error-level diagnostic messages.","Print important diagnostic messages.","Print all non-verbose diagnostic messages."],"markdownDescription":"Controls which messages are printed to the output window from the debugger's dispatcher. If not specified, this will default to `none` unless one of the verbose log settings are enabled (`debugEngineAPITracing`, `debugRuntimeEventTracing`, `expressionEvaluationTracing` or `startDebuggingTracing`), in which case the default changes to `normal`.","default":"none"},"debugEngineAPITracing":{"type":"string","enum":["none","error","all"],"enumDescriptions":["Disable tracing API calls","Print failures from debugger API calls.","Print all debugger API calls. This is very verbose."],"markdownDescription":"Controls if API calls to Microsoft.VisualStudio.Debugger.Engine/vsdebugeng.h should be printed to the output window. This option defaults to `none`.","default":"none"},"debugRuntimeEventTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for events raised by the underlying runtime should be enabled. This option defaults to `false`.","default":false},"expressionEvaluationTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for expression evaluation should be enabled. This option defaults to `false`.","default":false},"startDebuggingTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for start debugging should be enabled. This option defaults to `false`.","default":false}}},"consoleUsageMessage":{"type":"boolean","description":"Controls if a message is logged when the target process calls a 'Console.Read*' API and stdin is redirected to the console.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example /usr/bin/netcoredbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","markdownDescription":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. [More information](https://aka.ms/VSCode-CS-LaunchJson-SuppressJITOptimizations)","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false,"searchNuGetOrgSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"searchNuGetOrgSymbolServer":{"type":"boolean","description":"If 'true' the NuGet.org symbol server (https​://symbols.nuget.org​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":""},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":[]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"markdownDescription":"Options to control how Source Link connects to web servers. [More information](https://aka.ms/VSCode-DotNet-SourceLink)","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","markdownDescription":"Is Source Link enabled for this URL? If unspecified, this option defaults to `true`.","default":"true"}}}},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true},"targetOutputLogPath":{"type":"string","description":"When set, text that the target application writes to stdout and stderr (ex: Console.WriteLine) will be saved to the specified file. This option is ignored if console is set to something other than internalConsole. E.g. '${workspaceFolder}/out.txt'","default":""},"targetArchitecture":{"type":"string","markdownDescription":"[Only supported in local macOS debugging]\n\nThe architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are `x86_64` or `arm64`.","enum":["x86_64","arm64"]},"checkForDevCert":{"type":"boolean","description":"If you are launching a web project on Windows or macOS and this is enabled, the debugger will check if the computer has a self-signed HTTPS certificate used to develop web servers running on https endpoints. If unspecified, defaults to true when `serverReadyAction` is set. This option does nothing on Linux, VS Code remote, and VS Code Web UI scenarios. If the HTTPS certificate is not found or isn't trusted, the user will be prompted to install/trust it.","default":true}}},"attach":{"type":"object","required":[],"properties":{"processName":{"type":"string","default":"","markdownDescription":"The process name to attach to. If this is used, `processId` should not be used."},"processId":{"anyOf":[{"type":"string","markdownDescription":"The process id to attach to. Use \"\" to get a list of running processes to attach to. If `processId` used, `processName` should not be used.","default":""},{"type":"integer","markdownDescription":"The process id to attach to. Use \"\" to get a list of running processes to attach to. If `processId` used, `processName` should not be used.","default":0}]},"sourceFileMap":{"type":"object","markdownDescription":"Maps build-time paths to local source locations. All instances of build-time path will be replaced with the local source path.\n\nExample:\n\n`{\"<build-path>\":\"<local-source-path>\"}`","additionalProperties":{"type":"string"}},"justMyCode":{"type":"boolean","markdownDescription":"When enabled (the default), the debugger only displays and steps into user code (\"My Code\"), ignoring system code and other code that is optimized or that does not have debugging symbols. [More information](https://aka.ms/VSCode-CS-LaunchJson-JustMyCode)","default":true},"requireExactSource":{"type":"boolean","markdownDescription":"Flag to require current source code to match the pdb. This option defaults to `true`.","default":true},"enableStepFiltering":{"type":"boolean","markdownDescription":"Flag to enable stepping over Properties and Operators. This option defaults to `true`.","default":true},"logging":{"description":"Flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","markdownDescription":"Flag to determine whether exception messages should be logged to the output window. This option defaults to `true`.","default":true},"moduleLoad":{"type":"boolean","markdownDescription":"Flag to determine whether module load events should be logged to the output window. This option defaults to `true`.","default":true},"programOutput":{"type":"boolean","markdownDescription":"Flag to determine whether program output should be logged to the output window when not using an external console. This option defaults to `true`.","default":true},"browserStdOut":{"type":"boolean","markdownDescription":"Flag to determine if stdout text from the launching the web browser should be logged to the output window. This option defaults to `true`.","default":true},"elapsedTiming":{"type":"boolean","markdownDescription":"If true, protocol message logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took. This option defaults to `false`.","default":false},"threadExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when a thread in the target process exits. This option defaults to `false`.","default":false},"processExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when the target process exits, or debugging is stopped. This option defaults to `true`.","default":true},"engineLogging":{"type":"boolean","deprecationMessage":"The setting 'logging.engineLogging' has been deprecated in favor of 'logging.diagnosticsLog.protocolMessages'.","default":false},"diagnosticsLog":{"description":"Settings to control which messages are printed to the output window from the debugger's diagnostics log. This log is meant to help troubleshoot problems with the debugger.","type":"object","required":[],"default":{},"properties":{"protocolMessages":{"type":"boolean","markdownDescription":"Flag to determine whether DAP protocol messages exchanged between the C# debugger and the UI should be logged to the output window. This option defaults to `false`.","default":false},"dispatcherMessages":{"type":"string","enum":["none","error","important","normal"],"enumDescriptions":["Do not print additional diagnostic messages.","Print error-level diagnostic messages.","Print important diagnostic messages.","Print all non-verbose diagnostic messages."],"markdownDescription":"Controls which messages are printed to the output window from the debugger's dispatcher. If not specified, this will default to `none` unless one of the verbose log settings are enabled (`debugEngineAPITracing`, `debugRuntimeEventTracing`, `expressionEvaluationTracing` or `startDebuggingTracing`), in which case the default changes to `normal`.","default":"none"},"debugEngineAPITracing":{"type":"string","enum":["none","error","all"],"enumDescriptions":["Disable tracing API calls","Print failures from debugger API calls.","Print all debugger API calls. This is very verbose."],"markdownDescription":"Controls if API calls to Microsoft.VisualStudio.Debugger.Engine/vsdebugeng.h should be printed to the output window. This option defaults to `none`.","default":"none"},"debugRuntimeEventTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for events raised by the underlying runtime should be enabled. This option defaults to `false`.","default":false},"expressionEvaluationTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for expression evaluation should be enabled. This option defaults to `false`.","default":false},"startDebuggingTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for start debugging should be enabled. This option defaults to `false`.","default":false}}},"consoleUsageMessage":{"type":"boolean","description":"Controls if a message is logged when the target process calls a 'Console.Read*' API and stdin is redirected to the console.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example /usr/bin/netcoredbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","markdownDescription":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. [More information](https://aka.ms/VSCode-CS-LaunchJson-SuppressJITOptimizations)","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false,"searchNuGetOrgSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"searchNuGetOrgSymbolServer":{"type":"boolean","description":"If 'true' the NuGet.org symbol server (https​://symbols.nuget.org​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":""},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":[]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"markdownDescription":"Options to control how Source Link connects to web servers. [More information](https://aka.ms/VSCode-DotNet-SourceLink)","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","markdownDescription":"Is Source Link enabled for this URL? If unspecified, this option defaults to `true`.","default":"true"}}}},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true},"targetArchitecture":{"type":"string","markdownDescription":"[Only supported in local macOS debugging]\n\nThe architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are `x86_64` or `arm64`.","enum":["x86_64","arm64"]}}}}},{"type":"blazorwasm","label":"Blazor WebAssembly Debug","hiddenWhen":"dotnet.debug.serviceBrokerAvailable","initialConfigurations":[{"type":"blazorwasm","name":"Launch and Debug Blazor WebAssembly Application","request":"launch"}],"configurationAttributes":{"launch":{"properties":{"cwd":{"type":"string","description":"The directory of the Blazor WebAssembly app, defaults to the workspace folder.","default":"${workspaceFolder}"},"url":{"type":"string","description":"The URL of the application","default":"https://localhost:5001"},"browser":{"type":"string","description":"The debugging browser to launch (Edge or Chrome)","default":"edge","enum":["chrome","edge"]},"trace":{"type":["boolean","string"],"default":"true","enum":["verbose",true],"description":"If true, verbose logs from JS debugger are sent to log file. If 'verbose', send logs to console."},"hosted":{"type":"boolean","default":"false","description":"True if the app is a hosted Blazor WebAssembly app, false otherwise."},"webRoot":{"type":"string","default":"${workspaceFolder}","description":"Specifies the absolute path to the webserver root."},"timeout":{"type":"number","default":30000,"description":"Retry for this number of milliseconds to connect to browser."},"program":{"type":"string","default":"${workspaceFolder}/Server/bin/Debug/<target-framework>/<target-dll>","description":"The path of the DLL to execute when launching a hosted server app"},"env":{"type":"object","description":"Environment variables passed to dotnet. Only valid for hosted apps."},"dotNetConfig":{"description":"Options passed to the underlying .NET debugger. For more info, see https://github.com/dotnet/vscode-csharp/blob/main/debugger.md.","type":"object","required":[],"default":{},"properties":{"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window. Applicable only for the app server of hosted Blazor WASM apps.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true},"elapsedTiming":{"type":"boolean","description":"If true, engine logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took.","default":false},"threadExit":{"type":"boolean","description":"Controls if a message is logged when a thread in the target process exits. Default: `false`.","default":false},"processExit":{"type":"boolean","description":"Controls if a message is logged when the target process exits, or debugging is stopped. Default: `true`.","default":true}}},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}}}},"browserConfig":{"description":"Options based to the underlying JavaScript debugger. For more info, see https://github.com/microsoft/vscode-js-debug/blob/master/OPTIONS.md.","type":"object","required":[],"default":{},"properties":{"outputCapture":{"enum":["console","std"],"description":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","default":"console"}}}}},"attach":{"properties":{"url":{"type":"string","description":"The URL of the application","default":"https://localhost:5001"},"cwd":{"type":"string","description":"The directory of the Blazor WebAssembly app, defaults to the workspace folder.","default":"${workspaceFolder}"},"browser":{"type":"string","description":"The debugging browser to launch (Edge or Chrome)","default":"chrome","enum":["chrome","edge"]},"trace":{"type":["boolean","string"],"default":"true","enum":["verbose",true],"description":"If true, verbose logs from JS debugger are sent to log file. If 'verbose', send logs to console."},"webRoot":{"type":"string","default":"${workspaceFolder}","description":"Specifies the absolute path to the webserver root."},"timeout":{"type":"number","default":30000,"description":"Retry for this number of milliseconds to connect to browser."}}}}},{"type":"dotnet","label":"C#","hiddenWhen":"!dotnet.debug.serviceBrokerAvailable","languages":["csharp","razor","aspnetcorerazor"],"variables":{},"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","configurationAttributes":{"launch":{"type":"object","required":["projectPath"],"properties":{"projectPath":{"type":"string","description":"Path to the .csproj file.","default":"${workspaceFolder}/<insert-project-name-here>.csproj"},"launchConfigurationId":{"type":"string","description":"The launch configuration id to use. Empty string will use the current active configuration."}}}},"configurationSnippets":[{"label":".NET: Launch C# project","description":"This snippet configures VS Code to debug a C# project. Debug options (example: arguments to the executable) can be configured through the '<project-directory>/Properties/launchSettings.json' file.","body":{"name":"C#: ${1:<project-name>} Debug","type":"dotnet","request":"launch","projectPath":"^\"\\${workspaceFolder}/${2:<relative-path-to-project-folder>}${1:<project-name>}.csproj\""}}]},{"type":"monovsdbg","label":".NET Core using Mono Runtime","hiddenWhen":"true","languages":["csharp"]}],"semanticTokenTypes":[{"id":"razorComponentElement","description":"A Razor component element"},{"id":"RazorComponentAttribute","description":"A Razor component attribute"},{"id":"razorTagHelperElement","description":"A Razor TagHelper Element"},{"id":"razorTagHelperAttribute","description":"A Razor TagHelper Attribute"},{"id":"razorTransition","description":"A Razor transition"},{"id":"razorDirectiveAttribute","description":"A Razor Directive Attribute"},{"id":"razorDirectiveColon","description":"A colon between directive attribute parameters"},{"id":"razorDirective","description":"A Razor directive such as 'code' or 'function'"},{"id":"razorComment","description":"A Razor comment"},{"id":"markupCommentPunctuation","description":"The '@' or '*' of a Razor comment."},{"id":"markupTagDelimiter","description":"Markup delimiters like '<', '>', and '/'."},{"id":"markupOperator","description":"Delimiter for Markup Attribute Key-Value pairs."},{"id":"markupElement","description":"The name of a Markup element."},{"id":"markupAttribute","description":"The name of a Markup attribute."},{"id":"markupAttributeQuote","description":"A token that represents an attribute quote in a Markup attribute."},{"id":"markupAttributeValue","description":"The value of a Markup attribute."},{"id":"markupComment","description":"The contents of a Markup comment."},{"id":"markupCommentPunctuation","description":"The begining or ending punctuation of a Markup comment."},{"id":"excludedCode","description":"A token that represents inactive code."},{"id":"controlKeyword","description":"A token that represents a control-flow keyword.","superType":"keyword"},{"id":"operatorOverloaded","description":"A declaration or reference to an overloaded operator."},{"id":"whitespace","description":"A token that represents whitespace."},{"id":"text","description":"A token that represents text."},{"id":"preprocessorText","description":"Text associated with a preprocessor directive."},{"id":"punctuation","description":"A token that represents punctuation."},{"id":"stringVerbatim","superType":"string","description":"A token that represents a verbatim string."},{"id":"stringEscapeCharacter","superType":"string","description":"An escape character within a string."},{"id":"recordClass","superType":"class","description":"A definition or reference to a record class type."},{"id":"delegate","superType":"method","description":"A definition or reference to a delegate type."},{"id":"module","superType":"namespace","description":"A definition or reference to a module name."},{"id":"recordStruct","superType":"struct","description":"A definition or reference to a record struct type."},{"id":"field","superType":"property","description":"A definition or reference to a field."},{"id":"constant","superType":"variable","description":"A definition or reference to a constant."},{"id":"extensionMethod","superType":"method","description":"A definition or reference to an extension method"},{"id":"xmlDocCommentAttributeName","description":"A token that represents an attribute in an XML documentation comment"},{"id":"xmlDocCommentAttributeQuotes","description":"A token that represents an attribute quote in an XML documentation comment"},{"id":"xmlDocCommentAttributeValue","description":"A token that represents an attribute value in an XML documentation comment"},{"id":"xmlDocCommentCDataSection","description":"A token that represents a CDATA section in an XML documentation comment"},{"id":"xmlDocCommentComment","description":"A token that represents a comment in an XML documentation comment"},{"id":"xmlDocCommentDelimiter","description":"A token that represents a delimeter in an XML documentation comment"},{"id":"xmlDocCommentEntityReference","description":"A token that represents reference to an entity in an XML documentation comment"},{"id":"xmlDocCommentName","description":"A token that represents a name in an XML documentation comment"},{"id":"xmlDocCommentProcessingInstruction","description":"A token that represents a processing instruction in an XML documentation comment"},{"id":"xmlDocCommentText","description":"A token that represents text in an XML documentation comment"},{"id":"xmlLiteralAttributeName","description":"A token that represents an attribute name in an XML literal"},{"id":"xmlLiteralAttributeQuotes","description":"A token that represents an attribute quote in an XML literal"},{"id":"xmlLiteralAttributeValue","description":"A token that represents an attribute value in an XML literal"},{"id":"xmlLiteralCDataSection","description":"A token that represents a CDATA section in an XML literal"},{"id":"xmlLiteralComment","description":"A token that represents a comment in an XML literal"},{"id":"xmlLiteralDelimiter","description":"A token that represents a delimiter in an XML literal"},{"id":"xmlLiteralEmbeddedExpression","description":"A token that represents an emebedded expression in an XML literal"},{"id":"xmlLiteralEntityReference","description":"A token that represents a reference to an entity in an XML literal"},{"id":"xmlLiteralName","description":"A token that represents a name in an XML literal"},{"id":"xmlLiteralProcessingInstruction","description":"A token that represents a processing instruction in an XML literal"},{"id":"xmlLiteralText","description":"A token that represents text in an XML literal"},{"id":"regexComment","description":"A token that represents a comment in a regex string"},{"id":"regexCharacterClass","description":"A token that represents a character class in a regex string"},{"id":"regexAnchor","description":"A token that represents an anchor in a regex string"},{"id":"regexQuantifier","description":"A token that represents a quantifier in a regex string"},{"id":"regexGrouping","description":"A token that represents a group in a regex string"},{"id":"regexAlternation","description":"A token that represents an alternation in a regex string"},{"id":"regexText","description":"A token that represents text in a regex string"},{"id":"regexSelfEscapedCharacter","description":"A token that represents a self escaped character in a regex string"},{"id":"regexOtherEscape","description":"A token that represents an escape in a regex string"},{"id":"jsonComment","description":"A token that represents a comment in a JSON string"},{"id":"jsonNumber","description":"A token that represents a number in a JSON string"},{"id":"jsonString","description":"A token that represents a string in a JSON string"},{"id":"jsonKeyword","description":"A token that represents a keyword in a JSON string"},{"id":"jsonText","description":"A token that represents text in a JSON string"},{"id":"jsonOperator","description":"A token that represents an operator in a JSON string"},{"id":"jsonPunctuation","description":"A token that represents punctuation in a JSON string"},{"id":"jsonArray","description":"A token that represents an array in a JSON string"},{"id":"jsonObject","description":"A token that represents an object in a JSON string"},{"id":"jsonPropertyName","description":"A token that represents a property name in a JSON string"},{"id":"jsonConstructorName","description":"A token that represents a constructor in a JSON string"}],"semanticTokenModifiers":[],"semanticTokenScopes":[{"language":"aspnetcorerazor","scopes":{"razorComponentElement":["entity.name.class.element.component"],"RazorComponentAttribute":["entity.name.class.attribute.component"],"razorTagHelperElement":["entity.name.class.element.taghelper"],"razorTagHelperAttribute":["entity.name.class.attribute.taghelper"],"razorTransition":["keyword.control.razor.transition"],"razorDirectiveAttribute":["keyword.control.razor.directive.attribute","keyword.control.cshtml.directive.attribute"],"razorDirectiveColon":["keyword.control.razor.directive.colon","keyword.control.cshtml.directive.colon"],"razorDirective":["keyword.control.razor.directive","keyword.control.cshtml.directive"],"razorComment":["comment.block.razor"],"razorCommentTransition":["meta.comment.razor","keyword.control.cshtml.transition"],"razorCommentStar":["keyword.control.razor.comment.star","meta.comment.razor"],"angleBracket":["punctuation.definition.tag"],"forwardSlash":["punctuation.definition.tag"],"equals":["punctuation.separator.key-value.html"],"markupElement":["entity.name.tag.html"],"markupAttribute":["entity.other.attribute-name.html"],"markupAttributeQuote":["punctuation.definition.tag.html"],"markupAttributeValue":["punctuation.definition.entity.html"],"markupComment":["comment.block.html"],"markupCommentPunctuation":["punctuation.definition.comment.html","comment.block.html"],"markupTagDelimiter":["punctuation.definition.tag.html"],"keyword":["keyword.cs"],"excludedCode":["support.other.excluded.cs"],"controlKeyword":["keyword.control.cs"],"operatorOverloaded":["entity.name.function.member.overload.cs"],"preprocessorText":["meta.preprocessor.string.cs"],"punctuation":["punctuation.cs"],"stringVerbatim":["string.verbatim.cs"],"stringEscapeCharacter":["constant.character.escape.cs"],"delegate":["entity.name.type.delegate.cs"],"module":["entity.name.type.module.cs"],"field":["entity.name.variable.field.cs"],"constant":["variable.other.constant"],"extensionMethod":["entity.name.function.extension.cs"],"xmlDocCommentAttributeName":["comment.documentation.attribute.name.cs"],"xmlDocCommentAttributeQuotes":["comment.documentation.attribute.quotes.cs"],"xmlDocCommentAttributeValue":["comment.documentation.attribute.value.cs"],"xmlDocCommentCDataSection":["comment.documentation.cdata.cs"],"xmlDocCommentComment":["comment.documentation.comment.cs"],"xmlDocCommentDelimiter":["comment.documentation.delimiter.cs"],"xmlDocCommentEntityReference":["comment.documentation.entityReference.cs"],"xmlDocCommentName":["comment.documentation.name.cs"],"xmlDocCommentProcessingInstruction":["comment.documentation.processingInstruction.cs"],"xmlDocCommentText":["comment.documentation.cs"],"xmlLiteralAttributeName":["entity.other.attribute-name.localname.xml"],"xmlLiteralAttributeQuotes":["string.quoted.double.xml"],"xmlLiteralAttributeValue":["meta.tag.xml"],"xmlLiteralCDataSection":["string.quoted.double.xml"],"xmlLiteralComment":["comment.block.xml"],"xmlLiteralDelimiter":["text.xml"],"xmlLiteralEmbeddedExpression":["meta.tag.xml"],"xmlLiteralEntityReference":["meta.tag.xml"],"xmlLiteralName":["entity.name.tag.localname.xml"],"xmlLiteralProcessingInstruction":["meta.tag.xml"],"xmlLiteralText":["text.xml"],"regexComment":["string.regexp.comment.cs"],"regexCharacterClass":["constant.character.character-class.regexp.cs"],"regexAnchor":["keyword.control.anchor.regexp.cs"],"regexQuantifier":["keyword.operator.quantifier.regexp.cs"],"regexGrouping":["punctuation.definition.group.regexp.cs"],"regexAlternation":["keyword.operator.or.regexp.cs"],"regexText":["string.regexp"],"regexSelfEscapedCharacter":["string.regexp.self-escaped-character.cs"],"regexOtherEscape":["string.regexp.other-escape.cs"],"jsonComment":["comment.line.double-slash.js"],"jsonNumber":["constant.numeric.json"],"jsonString":["string.quoted.double.json"],"jsonKeyword":["constant.language.json"],"jsonText":["string.quoted.double.json"],"jsonOperator":["string.quoted.double.json"],"jsonPunctuation":["punctuation.separator.dictionary.key-value.json"],"jsonArray":["punctuation.definition.array.begin.json"],"jsonObject":["punctuation.definition.dictionary.begin.json"],"jsonPropertyName":["support.type.property-name.json"],"jsonConstructorName":["support.type.property-name.json"]}},{"language":"csharp","scopes":{"typeParameter":["entity.name.type.type-parameter"],"keyword":["keyword.cs"],"excludedCode":["support.other.excluded.cs"],"controlKeyword":["keyword.control.cs"],"operatorOverloaded":["entity.name.function.member.overload.cs"],"preprocessorText":["meta.preprocessor.string.cs"],"punctuation":["punctuation.cs"],"stringVerbatim":["string.verbatim.cs"],"stringEscapeCharacter":["constant.character.escape.cs"],"delegate":["entity.name.type.delegate.cs"],"module":["entity.name.type.module.cs"],"field":["entity.name.variable.field.cs"],"constant":["variable.other.constant"],"extensionMethod":["entity.name.function.extension.cs"],"xmlDocCommentAttributeName":["comment.documentation.attribute.name.cs"],"xmlDocCommentAttributeQuotes":["comment.documentation.attribute.quotes.cs"],"xmlDocCommentAttributeValue":["comment.documentation.attribute.value.cs"],"xmlDocCommentCDataSection":["comment.documentation.cdata.cs"],"xmlDocCommentComment":["comment.documentation.comment.cs"],"xmlDocCommentDelimiter":["comment.documentation.delimiter.cs"],"xmlDocCommentEntityReference":["comment.documentation.entityReference.cs"],"xmlDocCommentName":["comment.documentation.name.cs"],"xmlDocCommentProcessingInstruction":["comment.documentation.processingInstruction.cs"],"xmlDocCommentText":["comment.documentation.cs"],"xmlLiteralAttributeName":["entity.other.attribute-name.localname.xml"],"xmlLiteralAttributeQuotes":["string.quoted.double.xml"],"xmlLiteralAttributeValue":["meta.tag.xml"],"xmlLiteralCDataSection":["string.quoted.double.xml"],"xmlLiteralComment":["comment.block.xml"],"xmlLiteralDelimiter":["text.xml"],"xmlLiteralEmbeddedExpression":["meta.tag.xml"],"xmlLiteralEntityReference":["meta.tag.xml"],"xmlLiteralName":["entity.name.tag.localname.xml"],"xmlLiteralProcessingInstruction":["meta.tag.xml"],"xmlLiteralText":["text.xml"],"regexComment":["string.regexp.comment.cs"],"regexCharacterClass":["constant.character.character-class.regexp.cs"],"regexAnchor":["keyword.control.anchor.regexp.cs"],"regexQuantifier":["keyword.operator.quantifier.regexp.cs"],"regexGrouping":["punctuation.definition.group.regexp.cs"],"regexAlternation":["keyword.operator.or.regexp.cs"],"regexText":["string.regexp"],"regexSelfEscapedCharacter":["string.regexp.self-escaped-character.cs"],"regexOtherEscape":["string.regexp.other-escape.cs"],"jsonComment":["comment.line.double-slash.js"],"jsonNumber":["constant.numeric.json"],"jsonString":["string.quoted.double.json"],"jsonKeyword":["constant.language.json"],"jsonText":["string.quoted.double.json"],"jsonOperator":["string.quoted.double.json"],"jsonPunctuation":["punctuation.separator.dictionary.key-value.json"],"jsonArray":["punctuation.definition.array.begin.json"],"jsonObject":["punctuation.definition.dictionary.begin.json"],"jsonPropertyName":["support.type.property-name.json"],"jsonConstructorName":["support.type.property-name.json"]}}],"languages":[{"id":"aspnetcorerazor","extensions":[".cshtml",".razor"],"mimetypes":["text/x-cshtml"],"configuration":"./src/razor/language-configuration.json","aliases":["ASP.NET Razor"]}],"grammars":[{"language":"aspnetcorerazor","scopeName":"text.aspnetcorerazor","path":"./src/razor/syntaxes/aspnetcorerazor.tmLanguage.json","unbalancedBracketScopes":["text.aspnetcorerazor"]}],"menus":{"commandPalette":[{"command":"dotnet.test.runTestsInContext","when":"editorLangId == csharp && dotnet.server.activationContext == 'Roslyn' || dotnet.server.activationContext == 'OmniSharp'"},{"command":"dotnet.test.debugTestsInContext","when":"editorLangId == csharp && dotnet.server.activationContext == 'Roslyn' || dotnet.server.activationContext == 'OmniSharp'"},{"command":"o.restart","when":"dotnet.server.activationContext == 'OmniSharp'"},{"command":"csharp.listProcess","when":"false"},{"command":"csharp.listRemoteProcess","when":"false"},{"command":"csharp.listRemoteDockerProcess","when":"false"}],"editor/title":[{"command":"extension.showRazorCSharpWindow","when":"resourceLangId == aspnetcorerazor"},{"command":"extension.showRazorHtmlWindow","when":"resourceLangId == aspnetcorerazor"},{"command":"razor.reportIssue","when":"resourceLangId == aspnetcorerazor"}],"editor/context":[{"command":"dotnet.test.runTestsInContext","when":"editorLangId == csharp && (dotnet.server.activationContext == 'Roslyn' || dotnet.server.activationContext == 'OmniSharp')","group":"2_dotnet@1"},{"command":"dotnet.test.debugTestsInContext","when":"editorLangId == csharp && (dotnet.server.activationContext == 'Roslyn' || dotnet.server.activationContext == 'OmniSharp')","group":"2_dotnet@2"}]},"viewsWelcome":[{"view":"debug","contents":"[Generate C# Assets for Build and Debug](command:dotnet.generateAssets)\n\nTo learn more about launch.json, see [Configuring launch.json for C# debugging](https://aka.ms/VSCode-CS-LaunchJson).","when":"debugStartLanguage == csharp && !dotnet.debug.serviceBrokerAvailable"}]}},"location":{"$mid":1,"path":"/home/aexyzk/.vscode-oss/extensions/muhammad-sammy.csharp-2.15.30-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"57b4ceec-c35a-4a96-ab38-23c6338df406","publisherId":"cc79407d-f6d2-4535-9bd9-920d8557403d","publisherDisplayName":"muhammad-sammy","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1705126581681,"pinned":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"sumneko.lua","uuid":"3a15b5a7-be12-47e3-8445-88ee3eabc8b2"},"manifest":{"activationEvents":["onLanguage:lua","onWebviewPanel:lua-doc","onCommand:extension.lua.doc"],"author":"sumneko","capabilities":{"untrustedWorkspaces":{"description":"","restrictedConfigurations":["Lua.runtime.plugin","Lua.misc.parameters"],"supported":"limited"}},"categories":["Linters","Programming Languages","Snippets"],"contributes":{"commands":[{"command":"lua.psi.view","title":"Lua Psi Viewer"},{"command":"lua.addon_manager.open","title":"Lua: Open Addon Manager ..."},{"command":"lua.exportDocument","title":"Lua: Export Document ..."},{"command":"lua.reloadFFIMeta","title":"Lua: Reload luajit ffi meta"}],"configuration":{"properties":{"Lua.addonManager.enable":{"default":true,"markdownDescription":"Whether the addon manager is enabled or not.","scope":"resource","type":"boolean"},"Lua.codeLens.enable":{"default":false,"markdownDescription":"Enable code lens.","scope":"resource","type":"boolean"},"Lua.completion.autoRequire":{"default":true,"markdownDescription":"When the input looks like a file name, automatically `require` this file.","scope":"resource","type":"boolean"},"Lua.completion.callSnippet":{"default":"Disable","enum":["Disable","Both","Replace"],"markdownDescription":"Shows function call snippets.","markdownEnumDescriptions":["Only shows `function name`.","Shows `function name` and `call snippet`.","Only shows `call snippet.`"],"scope":"resource","type":"string"},"Lua.completion.displayContext":{"default":0,"markdownDescription":"Previewing the relevant code snippet of the suggestion may help you understand the usage of the suggestion. The number set indicates the number of intercepted lines in the code fragment. If it is set to `0`, this feature can be disabled.","scope":"resource","type":"integer"},"Lua.completion.enable":{"default":true,"markdownDescription":"Enable completion.","scope":"resource","type":"boolean"},"Lua.completion.keywordSnippet":{"default":"Replace","enum":["Disable","Both","Replace"],"markdownDescription":"Shows keyword syntax snippets.","markdownEnumDescriptions":["Only shows `keyword`.","Shows `keyword` and `syntax snippet`.","Only shows `syntax snippet`."],"scope":"resource","type":"string"},"Lua.completion.postfix":{"default":"@","markdownDescription":"The symbol used to trigger the postfix suggestion.","scope":"resource","type":"string"},"Lua.completion.requireSeparator":{"default":".","markdownDescription":"The separator used when `require`.","scope":"resource","type":"string"},"Lua.completion.showParams":{"default":true,"markdownDescription":"Display parameters in completion list. When the function has multiple definitions, they will be displayed separately.","scope":"resource","type":"boolean"},"Lua.completion.showWord":{"default":"Fallback","enum":["Enable","Fallback","Disable"],"markdownDescription":"Show contextual words in suggestions.","markdownEnumDescriptions":["Always show context words in suggestions.","Contextual words are only displayed when suggestions based on semantics cannot be provided.","Do not display context words."],"scope":"resource","type":"string"},"Lua.completion.workspaceWord":{"default":true,"markdownDescription":"Whether the displayed context word contains the content of other files in the workspace.","scope":"resource","type":"boolean"},"Lua.diagnostics.disable":{"default":[],"items":{"enum":["action-after-return","ambiguity-1","ambiguous-syntax","args-after-dots","assign-type-mismatch","await-in-sync","block-after-else","break-outside","cast-local-type","cast-type-mismatch","circle-doc-class","close-non-object","code-after-break","codestyle-check","count-down-loop","deprecated","different-requires","discard-returns","doc-field-no-class","duplicate-doc-alias","duplicate-doc-field","duplicate-doc-param","duplicate-index","duplicate-set-field","empty-block","err-assign-as-eq","err-c-long-comment","err-comment-prefix","err-do-as-then","err-eq-as-assign","err-esc","err-nonstandard-symbol","err-then-as-do","exp-in-action","global-element","global-in-nil-env","incomplete-signature-doc","index-in-func-name","inject-field","invisible","jump-local-scope","keyword","local-limit","lowercase-global","lua-doc-miss-sign","luadoc-error-diag-mode","luadoc-miss-alias-extends","luadoc-miss-alias-name","luadoc-miss-arg-name","luadoc-miss-cate-name","luadoc-miss-class-extends-name","luadoc-miss-class-name","luadoc-miss-diag-mode","luadoc-miss-diag-name","luadoc-miss-field-extends","luadoc-miss-field-name","luadoc-miss-fun-after-overload","luadoc-miss-generic-name","luadoc-miss-local-name","luadoc-miss-module-name","luadoc-miss-operator-name","luadoc-miss-param-extends","luadoc-miss-param-name","luadoc-miss-see-name","luadoc-miss-sign-name","luadoc-miss-symbol","luadoc-miss-type-name","luadoc-miss-vararg-type","luadoc-miss-version","malformed-number","miss-end","miss-esc-x","miss-exp","miss-exponent","miss-field","miss-loop-max","miss-loop-min","miss-method","miss-name","miss-sep-in-table","miss-space-between","miss-symbol","missing-fields","missing-global-doc","missing-local-export-doc","missing-parameter","missing-return","missing-return-value","name-style-check","need-check-nil","need-paren","nesting-long-mark","newfield-call","newline-call","no-unknown","no-visible-label","not-yieldable","param-type-mismatch","redefined-label","redefined-local","redundant-parameter","redundant-return","redundant-return-value","redundant-value","return-type-mismatch","set-const","spell-check","trailing-space","unbalanced-assignments","undefined-doc-class","undefined-doc-name","undefined-doc-param","undefined-env-child","undefined-field","undefined-global","unexpect-dots","unexpect-efunc-name","unexpect-lfunc-name","unexpect-symbol","unicode-name","unknown-attribute","unknown-cast-variable","unknown-diag-code","unknown-operator","unknown-symbol","unreachable-code","unsupport-symbol","unused-function","unused-label","unused-local","unused-vararg"],"type":"string"},"markdownDescription":"Disabled diagnostic (Use code in hover brackets).","scope":"resource","type":"array"},"Lua.diagnostics.disableScheme":{"default":["git"],"items":{"type":"string"},"markdownDescription":"Do not diagnose Lua files that use the following scheme.","scope":"resource","type":"array"},"Lua.diagnostics.enable":{"default":true,"markdownDescription":"Enable diagnostics.","scope":"resource","type":"boolean"},"Lua.diagnostics.globals":{"default":[],"items":{"type":"string"},"markdownDescription":"Defined global variables.","scope":"resource","type":"array"},"Lua.diagnostics.groupFileStatus":{"additionalProperties":false,"markdownDescription":"Modify the diagnostic needed file status in a group.\n\n* Opened:  only diagnose opened files\n* Any:     diagnose all files\n* None:    disable this diagnostic\n\n`Fallback` means that diagnostics in this group are controlled by `diagnostics.neededFileStatus` separately.\nOther settings will override individual settings without end of `!`.\n","properties":{"ambiguity":{"default":"Fallback","description":"* ambiguity-1\n* count-down-loop\n* different-requires\n* newfield-call\n* newline-call","enum":["Any","Opened","None","Fallback"],"type":"string"},"await":{"default":"Fallback","description":"* await-in-sync\n* not-yieldable","enum":["Any","Opened","None","Fallback"],"type":"string"},"codestyle":{"default":"Fallback","description":"* codestyle-check\n* name-style-check\n* spell-check","enum":["Any","Opened","None","Fallback"],"type":"string"},"conventions":{"default":"Fallback","description":"* global-element","enum":["Any","Opened","None","Fallback"],"type":"string"},"duplicate":{"default":"Fallback","description":"* duplicate-index\n* duplicate-set-field","enum":["Any","Opened","None","Fallback"],"type":"string"},"global":{"default":"Fallback","description":"* global-in-nil-env\n* lowercase-global\n* undefined-env-child\n* undefined-global","enum":["Any","Opened","None","Fallback"],"type":"string"},"luadoc":{"default":"Fallback","description":"* circle-doc-class\n* doc-field-no-class\n* duplicate-doc-alias\n* duplicate-doc-field\n* duplicate-doc-param\n* incomplete-signature-doc\n* missing-global-doc\n* missing-local-export-doc\n* undefined-doc-class\n* undefined-doc-name\n* undefined-doc-param\n* unknown-cast-variable\n* unknown-diag-code\n* unknown-operator","enum":["Any","Opened","None","Fallback"],"type":"string"},"redefined":{"default":"Fallback","description":"* redefined-local","enum":["Any","Opened","None","Fallback"],"type":"string"},"strict":{"default":"Fallback","description":"* close-non-object\n* deprecated\n* discard-returns\n* invisible","enum":["Any","Opened","None","Fallback"],"type":"string"},"strong":{"default":"Fallback","description":"* no-unknown","enum":["Any","Opened","None","Fallback"],"type":"string"},"type-check":{"default":"Fallback","description":"* assign-type-mismatch\n* cast-local-type\n* cast-type-mismatch\n* inject-field\n* need-check-nil\n* param-type-mismatch\n* return-type-mismatch\n* undefined-field","enum":["Any","Opened","None","Fallback"],"type":"string"},"unbalanced":{"default":"Fallback","description":"* missing-fields\n* missing-parameter\n* missing-return\n* missing-return-value\n* redundant-parameter\n* redundant-return-value\n* redundant-value\n* unbalanced-assignments","enum":["Any","Opened","None","Fallback"],"type":"string"},"unused":{"default":"Fallback","description":"* code-after-break\n* empty-block\n* redundant-return\n* trailing-space\n* unreachable-code\n* unused-function\n* unused-label\n* unused-local\n* unused-vararg","enum":["Any","Opened","None","Fallback"],"type":"string"}},"scope":"resource","title":"groupFileStatus","type":"object"},"Lua.diagnostics.groupSeverity":{"additionalProperties":false,"markdownDescription":"Modify the diagnostic severity in a group.\n`Fallback` means that diagnostics in this group are controlled by `diagnostics.severity` separately.\nOther settings will override individual settings without end of `!`.\n","properties":{"ambiguity":{"default":"Fallback","description":"* ambiguity-1\n* count-down-loop\n* different-requires\n* newfield-call\n* newline-call","enum":["Error","Warning","Information","Hint","Fallback"],"type":"string"},"await":{"default":"Fallback","description":"* await-in-sync\n* not-yieldable","enum":["Error","Warning","Information","Hint","Fallback"],"type":"string"},"codestyle":{"default":"Fallback","description":"* codestyle-check\n* name-style-check\n* spell-check","enum":["Error","Warning","Information","Hint","Fallback"],"type":"string"},"conventions":{"default":"Fallback","description":"* global-element","enum":["Error","Warning","Information","Hint","Fallback"],"type":"string"},"duplicate":{"default":"Fallback","description":"* duplicate-index\n* duplicate-set-field","enum":["Error","Warning","Information","Hint","Fallback"],"type":"string"},"global":{"default":"Fallback","description":"* global-in-nil-env\n* lowercase-global\n* undefined-env-child\n* undefined-global","enum":["Error","Warning","Information","Hint","Fallback"],"type":"string"},"luadoc":{"default":"Fallback","description":"* circle-doc-class\n* doc-field-no-class\n* duplicate-doc-alias\n* duplicate-doc-field\n* duplicate-doc-param\n* incomplete-signature-doc\n* missing-global-doc\n* missing-local-export-doc\n* undefined-doc-class\n* undefined-doc-name\n* undefined-doc-param\n* unknown-cast-variable\n* unknown-diag-code\n* unknown-operator","enum":["Error","Warning","Information","Hint","Fallback"],"type":"string"},"redefined":{"default":"Fallback","description":"* redefined-local","enum":["Error","Warning","Information","Hint","Fallback"],"type":"string"},"strict":{"default":"Fallback","description":"* close-non-object\n* deprecated\n* discard-returns\n* invisible","enum":["Error","Warning","Information","Hint","Fallback"],"type":"string"},"strong":{"default":"Fallback","description":"* no-unknown","enum":["Error","Warning","Information","Hint","Fallback"],"type":"string"},"type-check":{"default":"Fallback","description":"* assign-type-mismatch\n* cast-local-type\n* cast-type-mismatch\n* inject-field\n* need-check-nil\n* param-type-mismatch\n* return-type-mismatch\n* undefined-field","enum":["Error","Warning","Information","Hint","Fallback"],"type":"string"},"unbalanced":{"default":"Fallback","description":"* missing-fields\n* missing-parameter\n* missing-return\n* missing-return-value\n* redundant-parameter\n* redundant-return-value\n* redundant-value\n* unbalanced-assignments","enum":["Error","Warning","Information","Hint","Fallback"],"type":"string"},"unused":{"default":"Fallback","description":"* code-after-break\n* empty-block\n* redundant-return\n* trailing-space\n* unreachable-code\n* unused-function\n* unused-label\n* unused-local\n* unused-vararg","enum":["Error","Warning","Information","Hint","Fallback"],"type":"string"}},"scope":"resource","title":"groupSeverity","type":"object"},"Lua.diagnostics.ignoredFiles":{"default":"Opened","enum":["Enable","Opened","Disable"],"markdownDescription":"How to diagnose ignored files.","markdownEnumDescriptions":["Always diagnose these files.","Only when these files are opened will it be diagnosed.","These files are not diagnosed."],"scope":"resource","type":"string"},"Lua.diagnostics.libraryFiles":{"default":"Opened","enum":["Enable","Opened","Disable"],"markdownDescription":"How to diagnose files loaded via `Lua.workspace.library`.","markdownEnumDescriptions":["Always diagnose these files.","Only when these files are opened will it be diagnosed.","These files are not diagnosed."],"scope":"resource","type":"string"},"Lua.diagnostics.neededFileStatus":{"additionalProperties":false,"markdownDescription":"* Opened:  only diagnose opened files\n* Any:     diagnose all files\n* None:    disable this diagnostic\n\nEnd with `!` means override the group setting `diagnostics.groupFileStatus`.\n","properties":{"ambiguity-1":{"default":"Any","description":"Enable ambiguous operator precedence diagnostics. For example, the `num or 0 + 1` expression will be suggested `(num or 0) + 1` instead.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"assign-type-mismatch":{"default":"Opened","description":"Enable diagnostics for assignments in which the value's type does not match the type of the assigned variable.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"await-in-sync":{"default":"None","description":"Enable diagnostics for calls of asynchronous functions within a synchronous function.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"cast-local-type":{"default":"Opened","description":"Enable diagnostics for casts of local variables where the target type does not match the defined type.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"cast-type-mismatch":{"default":"Opened","description":"Enable diagnostics for casts where the target type does not match the initial type.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"circle-doc-class":{"default":"Any","description":"TODO: Needs documentation","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"close-non-object":{"default":"Any","description":"Enable diagnostics for attempts to close a variable with a non-object.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"code-after-break":{"default":"Opened","description":"Enable diagnostics for code placed after a break statement in a loop.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"codestyle-check":{"default":"None","description":"Enable diagnostics for incorrectly styled lines.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"count-down-loop":{"default":"Any","description":"Enable diagnostics for `for` loops which will never reach their max/limit because the loop is incrementing instead of decrementing.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"deprecated":{"default":"Any","description":"Enable diagnostics to highlight deprecated API.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"different-requires":{"default":"Any","description":"Enable diagnostics for files which are required by two different paths.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"discard-returns":{"default":"Any","description":"Enable diagnostics for calls of functions annotated with `---@nodiscard` where the return values are ignored.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"doc-field-no-class":{"default":"Any","description":"Enable diagnostics to highlight a field annotation without a defining class annotation.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"duplicate-doc-alias":{"default":"Any","description":"Enable diagnostics for a duplicated alias annotation name.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"duplicate-doc-field":{"default":"Any","description":"Enable diagnostics for a duplicated field annotation name.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"duplicate-doc-param":{"default":"Any","description":"Enable diagnostics for a duplicated param annotation name.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"duplicate-index":{"default":"Any","description":"Enable duplicate table index diagnostics.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"duplicate-set-field":{"default":"Opened","description":"Enable diagnostics for setting the same field in a class more than once.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"empty-block":{"default":"Opened","description":"Enable empty code block diagnostics.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"global-element":{"default":"None","description":"Enable diagnostics to warn about global elements.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"global-in-nil-env":{"default":"Any","description":"Enable cannot use global variables （ `_ENV` is set to `nil`） diagnostics.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"incomplete-signature-doc":{"default":"None","description":"Incomplete @param or @return annotations for functions.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"inject-field":{"default":"Opened","description":"TODO: Needs documentation","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"invisible":{"default":"Any","description":"Enable diagnostics for accesses to fields which are invisible.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"lowercase-global":{"default":"Any","description":"Enable lowercase global variable definition diagnostics.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"missing-fields":{"default":"Any","description":"TODO: Needs documentation","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"missing-global-doc":{"default":"None","description":"Missing annotations for globals! Global functions must have a comment and annotations for all parameters and return values.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"missing-local-export-doc":{"default":"None","description":"Missing annotations for exported locals! Exported local functions must have a comment and annotations for all parameters and return values.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"missing-parameter":{"default":"Any","description":"Enable diagnostics for function calls where the number of arguments is less than the number of annotated function parameters.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"missing-return":{"default":"Any","description":"Enable diagnostics for functions with return annotations which have no return statement.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"missing-return-value":{"default":"Any","description":"Enable diagnostics for return statements without values although the containing function declares returns.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"name-style-check":{"default":"None","description":"Enable diagnostics for name style.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"need-check-nil":{"default":"Opened","description":"Enable diagnostics for variable usages if `nil` or an optional (potentially `nil`) value was assigned to the variable before.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"newfield-call":{"default":"Any","description":"Enable newfield call diagnostics. It is raised when the parenthesis of a function call appear on the following line when defining a field in a table.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"newline-call":{"default":"Any","description":"Enable newline call diagnostics. Is's raised when a line starting with `(` is encountered, which is syntactically parsed as a function call on the previous line.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"no-unknown":{"default":"None","description":"Enable diagnostics for cases in which the type cannot be inferred.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"not-yieldable":{"default":"None","description":"Enable diagnostics for calls to `coroutine.yield()` when it is not permitted.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"param-type-mismatch":{"default":"Opened","description":"Enable diagnostics for function calls where the type of a provided parameter does not match the type of the annotated function definition.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"redefined-local":{"default":"Opened","description":"Enable redefined local variable diagnostics.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"redundant-parameter":{"default":"Any","description":"Enable redundant function parameter diagnostics.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"redundant-return":{"default":"Opened","description":"Enable diagnostics for return statements which are not needed because the function would exit on its own.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"redundant-return-value":{"default":"Any","description":"Enable diagnostics for return statements which return an extra value which is not specified by a return annotation.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"redundant-value":{"default":"Any","description":"Enable the redundant values assigned diagnostics. It's raised during assignment operation, when the number of values is higher than the number of objects being assigned.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"return-type-mismatch":{"default":"Opened","description":"Enable diagnostics for return values whose type does not match the type declared in the corresponding return annotation.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"spell-check":{"default":"None","description":"Enable diagnostics for typos in strings.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"trailing-space":{"default":"Opened","description":"Enable trailing space diagnostics.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"unbalanced-assignments":{"default":"Any","description":"Enable diagnostics on multiple assignments if not all variables obtain a value (e.g., `local x,y = 1`).","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"undefined-doc-class":{"default":"Any","description":"Enable diagnostics for class annotations in which an undefined class is referenced.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"undefined-doc-name":{"default":"Any","description":"Enable diagnostics for type annotations referencing an undefined type or alias.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"undefined-doc-param":{"default":"Any","description":"Enable diagnostics for cases in which a parameter annotation is given without declaring the parameter in the function definition.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"undefined-env-child":{"default":"Any","description":"Enable undefined environment variable diagnostics. It's raised when `_ENV` table is set to a new literal table, but the used global variable is no longer present in the global environment.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"undefined-field":{"default":"Opened","description":"Enable diagnostics for cases in which an undefined field of a variable is read.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"undefined-global":{"default":"Any","description":"Enable undefined global variable diagnostics.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"unknown-cast-variable":{"default":"Any","description":"Enable diagnostics for casts of undefined variables.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"unknown-diag-code":{"default":"Any","description":"Enable diagnostics in cases in which an unknown diagnostics code is entered.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"unknown-operator":{"default":"Any","description":"Enable diagnostics for unknown operators.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"unreachable-code":{"default":"Opened","description":"Enable diagnostics for unreachable code.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"unused-function":{"default":"Opened","description":"Enable unused function diagnostics.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"unused-label":{"default":"Opened","description":"Enable unused label diagnostics.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"unused-local":{"default":"Opened","description":"Enable unused local variable diagnostics.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"},"unused-vararg":{"default":"Opened","description":"Enable unused vararg diagnostics.","enum":["Any","Opened","None","Any!","Opened!","None!"],"type":"string"}},"scope":"resource","title":"neededFileStatus","type":"object"},"Lua.diagnostics.severity":{"additionalProperties":false,"markdownDescription":"Modify the diagnostic severity.\n\nEnd with `!` means override the group setting `diagnostics.groupSeverity`.\n","properties":{"ambiguity-1":{"default":"Warning","description":"Enable ambiguous operator precedence diagnostics. For example, the `num or 0 + 1` expression will be suggested `(num or 0) + 1` instead.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"assign-type-mismatch":{"default":"Warning","description":"Enable diagnostics for assignments in which the value's type does not match the type of the assigned variable.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"await-in-sync":{"default":"Warning","description":"Enable diagnostics for calls of asynchronous functions within a synchronous function.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"cast-local-type":{"default":"Warning","description":"Enable diagnostics for casts of local variables where the target type does not match the defined type.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"cast-type-mismatch":{"default":"Warning","description":"Enable diagnostics for casts where the target type does not match the initial type.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"circle-doc-class":{"default":"Warning","description":"TODO: Needs documentation","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"close-non-object":{"default":"Warning","description":"Enable diagnostics for attempts to close a variable with a non-object.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"code-after-break":{"default":"Hint","description":"Enable diagnostics for code placed after a break statement in a loop.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"codestyle-check":{"default":"Warning","description":"Enable diagnostics for incorrectly styled lines.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"count-down-loop":{"default":"Warning","description":"Enable diagnostics for `for` loops which will never reach their max/limit because the loop is incrementing instead of decrementing.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"deprecated":{"default":"Warning","description":"Enable diagnostics to highlight deprecated API.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"different-requires":{"default":"Warning","description":"Enable diagnostics for files which are required by two different paths.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"discard-returns":{"default":"Warning","description":"Enable diagnostics for calls of functions annotated with `---@nodiscard` where the return values are ignored.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"doc-field-no-class":{"default":"Warning","description":"Enable diagnostics to highlight a field annotation without a defining class annotation.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"duplicate-doc-alias":{"default":"Warning","description":"Enable diagnostics for a duplicated alias annotation name.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"duplicate-doc-field":{"default":"Warning","description":"Enable diagnostics for a duplicated field annotation name.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"duplicate-doc-param":{"default":"Warning","description":"Enable diagnostics for a duplicated param annotation name.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"duplicate-index":{"default":"Warning","description":"Enable duplicate table index diagnostics.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"duplicate-set-field":{"default":"Warning","description":"Enable diagnostics for setting the same field in a class more than once.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"empty-block":{"default":"Hint","description":"Enable empty code block diagnostics.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"global-element":{"default":"Warning","description":"Enable diagnostics to warn about global elements.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"global-in-nil-env":{"default":"Warning","description":"Enable cannot use global variables （ `_ENV` is set to `nil`） diagnostics.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"incomplete-signature-doc":{"default":"Warning","description":"Incomplete @param or @return annotations for functions.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"inject-field":{"default":"Warning","description":"TODO: Needs documentation","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"invisible":{"default":"Warning","description":"Enable diagnostics for accesses to fields which are invisible.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"lowercase-global":{"default":"Information","description":"Enable lowercase global variable definition diagnostics.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"missing-fields":{"default":"Warning","description":"TODO: Needs documentation","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"missing-global-doc":{"default":"Warning","description":"Missing annotations for globals! Global functions must have a comment and annotations for all parameters and return values.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"missing-local-export-doc":{"default":"Warning","description":"Missing annotations for exported locals! Exported local functions must have a comment and annotations for all parameters and return values.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"missing-parameter":{"default":"Warning","description":"Enable diagnostics for function calls where the number of arguments is less than the number of annotated function parameters.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"missing-return":{"default":"Warning","description":"Enable diagnostics for functions with return annotations which have no return statement.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"missing-return-value":{"default":"Warning","description":"Enable diagnostics for return statements without values although the containing function declares returns.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"name-style-check":{"default":"Warning","description":"Enable diagnostics for name style.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"need-check-nil":{"default":"Warning","description":"Enable diagnostics for variable usages if `nil` or an optional (potentially `nil`) value was assigned to the variable before.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"newfield-call":{"default":"Warning","description":"Enable newfield call diagnostics. It is raised when the parenthesis of a function call appear on the following line when defining a field in a table.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"newline-call":{"default":"Warning","description":"Enable newline call diagnostics. Is's raised when a line starting with `(` is encountered, which is syntactically parsed as a function call on the previous line.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"no-unknown":{"default":"Warning","description":"Enable diagnostics for cases in which the type cannot be inferred.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"not-yieldable":{"default":"Warning","description":"Enable diagnostics for calls to `coroutine.yield()` when it is not permitted.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"param-type-mismatch":{"default":"Warning","description":"Enable diagnostics for function calls where the type of a provided parameter does not match the type of the annotated function definition.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"redefined-local":{"default":"Hint","description":"Enable redefined local variable diagnostics.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"redundant-parameter":{"default":"Warning","description":"Enable redundant function parameter diagnostics.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"redundant-return":{"default":"Hint","description":"Enable diagnostics for return statements which are not needed because the function would exit on its own.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"redundant-return-value":{"default":"Warning","description":"Enable diagnostics for return statements which return an extra value which is not specified by a return annotation.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"redundant-value":{"default":"Warning","description":"Enable the redundant values assigned diagnostics. It's raised during assignment operation, when the number of values is higher than the number of objects being assigned.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"return-type-mismatch":{"default":"Warning","description":"Enable diagnostics for return values whose type does not match the type declared in the corresponding return annotation.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"spell-check":{"default":"Information","description":"Enable diagnostics for typos in strings.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"trailing-space":{"default":"Hint","description":"Enable trailing space diagnostics.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"unbalanced-assignments":{"default":"Warning","description":"Enable diagnostics on multiple assignments if not all variables obtain a value (e.g., `local x,y = 1`).","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"undefined-doc-class":{"default":"Warning","description":"Enable diagnostics for class annotations in which an undefined class is referenced.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"undefined-doc-name":{"default":"Warning","description":"Enable diagnostics for type annotations referencing an undefined type or alias.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"undefined-doc-param":{"default":"Warning","description":"Enable diagnostics for cases in which a parameter annotation is given without declaring the parameter in the function definition.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"undefined-env-child":{"default":"Information","description":"Enable undefined environment variable diagnostics. It's raised when `_ENV` table is set to a new literal table, but the used global variable is no longer present in the global environment.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"undefined-field":{"default":"Warning","description":"Enable diagnostics for cases in which an undefined field of a variable is read.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"undefined-global":{"default":"Warning","description":"Enable undefined global variable diagnostics.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"unknown-cast-variable":{"default":"Warning","description":"Enable diagnostics for casts of undefined variables.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"unknown-diag-code":{"default":"Warning","description":"Enable diagnostics in cases in which an unknown diagnostics code is entered.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"unknown-operator":{"default":"Warning","description":"Enable diagnostics for unknown operators.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"unreachable-code":{"default":"Hint","description":"Enable diagnostics for unreachable code.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"unused-function":{"default":"Hint","description":"Enable unused function diagnostics.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"unused-label":{"default":"Hint","description":"Enable unused label diagnostics.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"unused-local":{"default":"Hint","description":"Enable unused local variable diagnostics.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"},"unused-vararg":{"default":"Hint","description":"Enable unused vararg diagnostics.","enum":["Error","Warning","Information","Hint","Error!","Warning!","Information!","Hint!"],"type":"string"}},"scope":"resource","title":"severity","type":"object"},"Lua.diagnostics.unusedLocalExclude":{"default":[],"items":{"type":"string"},"markdownDescription":"Do not diagnose `unused-local` when the variable name matches the following pattern.","scope":"resource","type":"array"},"Lua.diagnostics.workspaceDelay":{"default":3000,"markdownDescription":"Latency (milliseconds) for workspace diagnostics.","scope":"resource","type":"integer"},"Lua.diagnostics.workspaceEvent":{"default":"OnSave","enum":["OnChange","OnSave","None"],"markdownDescription":"Set the time to trigger workspace diagnostics.","markdownEnumDescriptions":["Trigger workspace diagnostics when the file is changed.","Trigger workspace diagnostics when the file is saved.","Disable workspace diagnostics."],"scope":"resource","type":"string"},"Lua.diagnostics.workspaceRate":{"default":100,"markdownDescription":"Workspace diagnostics run rate (%). Decreasing this value reduces CPU usage, but also reduces the speed of workspace diagnostics. The diagnosis of the file you are currently editing is always done at full speed and is not affected by this setting.","scope":"resource","type":"integer"},"Lua.doc.packageName":{"default":[],"items":{"type":"string"},"markdownDescription":"Treat specific field names as package, e.g. `m_*` means `XXX.m_id` and `XXX.m_type` are package, witch can only be accessed in the file where the definition is located.","scope":"resource","type":"array"},"Lua.doc.privateName":{"default":[],"items":{"type":"string"},"markdownDescription":"Treat specific field names as private, e.g. `m_*` means `XXX.m_id` and `XXX.m_type` are private, witch can only be accessed in the class where the definition is located.","scope":"resource","type":"array"},"Lua.doc.protectedName":{"default":[],"items":{"type":"string"},"markdownDescription":"Treat specific field names as protected, e.g. `m_*` means `XXX.m_id` and `XXX.m_type` are protected, witch can only be accessed in the class where the definition is located and its subclasses.","scope":"resource","type":"array"},"Lua.format.defaultConfig":{"additionalProperties":false,"default":{},"markdownDescription":"The default format configuration. Has a lower priority than `.editorconfig` file in the workspace.\nRead [formatter docs](https://github.com/CppCXY/EmmyLuaCodeStyle/tree/master/docs) to learn usage.\n","patternProperties":{".*":{"default":"","type":"string"}},"scope":"resource","title":"defaultConfig","type":"object"},"Lua.format.enable":{"default":true,"markdownDescription":"Enable code formatter.","scope":"resource","type":"boolean"},"Lua.hint.arrayIndex":{"default":"Auto","enum":["Enable","Auto","Disable"],"markdownDescription":"Show hints of array index when constructing a table.","markdownEnumDescriptions":["Show hints in all tables.","Show hints only when the table is greater than 3 items, or the table is a mixed table.","Disable hints of array index."],"scope":"resource","type":"string"},"Lua.hint.await":{"default":true,"markdownDescription":"If the called function is marked `---@async`, prompt `await` at the call.","scope":"resource","type":"boolean"},"Lua.hint.enable":{"default":false,"markdownDescription":"Enable inlay hint.","scope":"resource","type":"boolean"},"Lua.hint.paramName":{"default":"All","enum":["All","Literal","Disable"],"markdownDescription":"Show hints of parameter name at the function call.","markdownEnumDescriptions":["All types of parameters are shown.","Only literal type parameters are shown.","Disable parameter hints."],"scope":"resource","type":"string"},"Lua.hint.paramType":{"default":true,"markdownDescription":"Show type hints at the parameter of the function.","scope":"resource","type":"boolean"},"Lua.hint.semicolon":{"default":"SameLine","enum":["All","SameLine","Disable"],"markdownDescription":"If there is no semicolon at the end of the statement, display a virtual semicolon.","markdownEnumDescriptions":["All statements display virtual semicolons.","When two statements are on the same line, display a semicolon between them.","Disable virtual semicolons."],"scope":"resource","type":"string"},"Lua.hint.setType":{"default":false,"markdownDescription":"Show hints of type at assignment operation.","scope":"resource","type":"boolean"},"Lua.hover.enable":{"default":true,"markdownDescription":"Enable hover.","scope":"resource","type":"boolean"},"Lua.hover.enumsLimit":{"default":5,"markdownDescription":"When the value corresponds to multiple types, limit the number of types displaying.","scope":"resource","type":"integer"},"Lua.hover.expandAlias":{"default":true,"markdownDescription":"Whether to expand the alias. For example, expands `---@alias myType boolean|number` appears as `boolean|number`, otherwise it appears as `myType'.\n","scope":"resource","type":"boolean"},"Lua.hover.previewFields":{"default":50,"markdownDescription":"When hovering to view a table, limits the maximum number of previews for fields.","scope":"resource","type":"integer"},"Lua.hover.viewNumber":{"default":true,"markdownDescription":"Hover to view numeric content (only if literal is not decimal).","scope":"resource","type":"boolean"},"Lua.hover.viewString":{"default":true,"markdownDescription":"Hover to view the contents of a string (only if the literal contains an escape character).","scope":"resource","type":"boolean"},"Lua.hover.viewStringMax":{"default":1000,"markdownDescription":"The maximum length of a hover to view the contents of a string.","scope":"resource","type":"integer"},"Lua.misc.executablePath":{"default":"","markdownDescription":"Specify the executable path in VSCode.","scope":"resource","type":"string"},"Lua.misc.parameters":{"default":[],"items":{"type":"string"},"markdownDescription":"[Command line parameters](https://github.com/LuaLS/lua-telemetry-server/tree/master/method) when starting the language server in VSCode.","scope":"resource","type":"array"},"Lua.nameStyle.config":{"additionalProperties":false,"default":{},"markdownDescription":"Set name style config","patternProperties":{".*":{"type":["string","array"]}},"scope":"resource","title":"config","type":"object"},"Lua.runtime.builtin":{"additionalProperties":false,"markdownDescription":"Adjust the enabled state of the built-in library. You can disable (or redefine) the non-existent library according to the actual runtime environment.\n\n* `default`: Indicates that the library will be enabled or disabled according to the runtime version\n* `enable`: always enable\n* `disable`: always disable\n","properties":{"basic":{"default":"default","description":"TODO: Needs documentation","enum":["default","enable","disable"],"type":"string"},"bit":{"default":"default","description":"TODO: Needs documentation","enum":["default","enable","disable"],"type":"string"},"bit32":{"default":"default","description":"TODO: Needs documentation","enum":["default","enable","disable"],"type":"string"},"builtin":{"default":"default","description":"TODO: Needs documentation","enum":["default","enable","disable"],"type":"string"},"coroutine":{"default":"default","description":"TODO: Needs documentation","enum":["default","enable","disable"],"type":"string"},"debug":{"default":"default","description":"TODO: Needs documentation","enum":["default","enable","disable"],"type":"string"},"ffi":{"default":"default","description":"TODO: Needs documentation","enum":["default","enable","disable"],"type":"string"},"io":{"default":"default","description":"TODO: Needs documentation","enum":["default","enable","disable"],"type":"string"},"jit":{"default":"default","description":"TODO: Needs documentation","enum":["default","enable","disable"],"type":"string"},"jit.profile":{"default":"default","description":"TODO: Needs documentation","enum":["default","enable","disable"],"type":"string"},"jit.util":{"default":"default","description":"TODO: Needs documentation","enum":["default","enable","disable"],"type":"string"},"math":{"default":"default","description":"TODO: Needs documentation","enum":["default","enable","disable"],"type":"string"},"os":{"default":"default","description":"TODO: Needs documentation","enum":["default","enable","disable"],"type":"string"},"package":{"default":"default","description":"TODO: Needs documentation","enum":["default","enable","disable"],"type":"string"},"string":{"default":"default","description":"TODO: Needs documentation","enum":["default","enable","disable"],"type":"string"},"string.buffer":{"default":"default","description":"TODO: Needs documentation","enum":["default","enable","disable"],"type":"string"},"table":{"default":"default","description":"TODO: Needs documentation","enum":["default","enable","disable"],"type":"string"},"table.clear":{"default":"default","description":"TODO: Needs documentation","enum":["default","enable","disable"],"type":"string"},"table.new":{"default":"default","description":"TODO: Needs documentation","enum":["default","enable","disable"],"type":"string"},"utf8":{"default":"default","description":"TODO: Needs documentation","enum":["default","enable","disable"],"type":"string"}},"scope":"resource","title":"builtin","type":"object"},"Lua.runtime.fileEncoding":{"default":"utf8","enum":["utf8","ansi","utf16le","utf16be"],"markdownDescription":"File encoding. The `ansi` option is only available under the `Windows` platform.","markdownEnumDescriptions":["TODO: Needs documentation","TODO: Needs documentation","TODO: Needs documentation","TODO: Needs documentation"],"scope":"resource","type":"string"},"Lua.runtime.meta":{"default":"${version} ${language} ${encoding}","markdownDescription":"Format of the directory name of the meta files.","scope":"resource","type":"string"},"Lua.runtime.nonstandardSymbol":{"default":[],"items":{"enum":["//","/**/","`","+=","-=","*=","/=","%=","^=","//=","|=","&=","<<=",">>=","||","&&","!","!=","continue"],"type":"string"},"markdownDescription":"Supports non-standard symbols. Make sure that your runtime environment supports these symbols.","scope":"resource","type":"array"},"Lua.runtime.path":{"default":["?.lua","?/init.lua"],"items":{"type":"string"},"markdownDescription":"When using `require`, how to find the file based on the input name.\nSetting this config to `?/init.lua` means that when you enter `require 'myfile'`, `${workspace}/myfile/init.lua` will be searched from the loaded files.\nif `runtime.pathStrict` is `false`, `${workspace}/**/myfile/init.lua` will also be searched.\nIf you want to load files outside the workspace, you need to set `Lua.workspace.library` first.\n","scope":"resource","type":"array"},"Lua.runtime.pathStrict":{"default":false,"markdownDescription":"When enabled, `runtime.path` will only search the first level of directories, see the description of `runtime.path`.","scope":"resource","type":"boolean"},"Lua.runtime.plugin":{"default":"","markdownDescription":"Plugin path. Please read [wiki](https://luals.github.io/wiki/plugins) to learn more.","scope":"resource","type":"string"},"Lua.runtime.pluginArgs":{"default":[],"items":{"type":"string"},"markdownDescription":"Additional arguments for the plugin.","scope":"resource","type":"array"},"Lua.runtime.special":{"additionalProperties":false,"default":{},"markdownDescription":"The custom global variables are regarded as some special built-in variables, and the language server will provide special support\nThe following example shows that 'include' is treated as' require '.\n```json\n\"Lua.runtime.special\" : {\n    \"include\" : \"require\"\n}\n```\n","patternProperties":{".*":{"default":"require","enum":["_G","rawset","rawget","setmetatable","require","dofile","loadfile","pcall","xpcall","assert","error","type","os.exit"],"type":"string"}},"scope":"resource","title":"special","type":"object"},"Lua.runtime.unicodeName":{"default":false,"markdownDescription":"Allows Unicode characters in name.","scope":"resource","type":"boolean"},"Lua.runtime.version":{"default":"Lua 5.4","enum":["Lua 5.1","Lua 5.2","Lua 5.3","Lua 5.4","LuaJIT"],"markdownDescription":"Lua runtime version.","markdownEnumDescriptions":["TODO: Needs documentation","TODO: Needs documentation","TODO: Needs documentation","TODO: Needs documentation","TODO: Needs documentation"],"scope":"resource","type":"string"},"Lua.semantic.annotation":{"default":true,"markdownDescription":"Semantic coloring of type annotations.","scope":"resource","type":"boolean"},"Lua.semantic.enable":{"default":true,"markdownDescription":"Enable semantic color. You may need to set `editor.semanticHighlighting.enabled` to `true` to take effect.","scope":"resource","type":"boolean"},"Lua.semantic.keyword":{"default":false,"markdownDescription":"Semantic coloring of keywords/literals/operators. You only need to enable this feature if your editor cannot do syntax coloring.","scope":"resource","type":"boolean"},"Lua.semantic.variable":{"default":true,"markdownDescription":"Semantic coloring of variables/fields/parameters.","scope":"resource","type":"boolean"},"Lua.signatureHelp.enable":{"default":true,"markdownDescription":"Enable signature help.","scope":"resource","type":"boolean"},"Lua.spell.dict":{"default":[],"items":{"type":"string"},"markdownDescription":"Custom words for spell checking.","scope":"resource","type":"array"},"Lua.type.castNumberToInteger":{"default":true,"markdownDescription":"Allowed to assign the `number` type to the `integer` type.","scope":"resource","type":"boolean"},"Lua.type.weakNilCheck":{"default":false,"markdownDescription":"When checking the type of union type, ignore the `nil` in it.\n\nWhen this setting is `false`, the `number|nil` type cannot be assigned to the `number` type. It can be with `true`.\n","scope":"resource","type":"boolean"},"Lua.type.weakUnionCheck":{"default":false,"markdownDescription":"Once one subtype of a union type meets the condition, the union type also meets the condition.\n\nWhen this setting is `false`, the `number|boolean` type cannot be assigned to the `number` type. It can be with `true`.\n","scope":"resource","type":"boolean"},"Lua.typeFormat.config":{"additionalProperties":false,"markdownDescription":"Configures the formatting behavior while typing Lua code.","properties":{"auto_complete_end":{"default":"true","description":"Controls if `end` is automatically completed at suitable positions.","type":"string"},"auto_complete_table_sep":{"default":"true","description":"Controls if a separator is automatically appended at the end of a table declaration.","type":"string"},"format_line":{"default":"true","description":"Controls if a line is formatted at all.","type":"string"}},"scope":"resource","title":"config","type":"object"},"Lua.window.progressBar":{"default":true,"markdownDescription":"Show progress bar in status bar.","scope":"resource","type":"boolean"},"Lua.window.statusBar":{"default":true,"markdownDescription":"Show extension status in status bar.","scope":"resource","type":"boolean"},"Lua.workspace.checkThirdParty":{"markdownDescription":"Automatic detection and adaptation of third-party libraries, currently supported libraries are:\n\n* OpenResty\n* Cocos4.0\n* LÖVE\n* LÖVR\n* skynet\n* Jass\n","scope":"resource","type":["string","boolean"]},"Lua.workspace.ignoreDir":{"default":[".vscode"],"items":{"type":"string"},"markdownDescription":"Ignored files and directories (Use `.gitignore` grammar).","scope":"resource","type":"array"},"Lua.workspace.ignoreSubmodules":{"default":true,"markdownDescription":"Ignore submodules.","scope":"resource","type":"boolean"},"Lua.workspace.library":{"default":[],"items":{"type":"string"},"markdownDescription":"In addition to the current workspace, which directories will load files from. The files in these directories will be treated as externally provided code libraries, and some features (such as renaming fields) will not modify these files.","scope":"resource","type":"array"},"Lua.workspace.maxPreload":{"default":5000,"markdownDescription":"Max preloaded files.","scope":"resource","type":"integer"},"Lua.workspace.preloadFileSize":{"default":500,"markdownDescription":"Skip files larger than this value (KB) when preloading.","scope":"resource","type":"integer"},"Lua.workspace.useGitIgnore":{"default":true,"markdownDescription":"Ignore files list in `.gitignore` .","scope":"resource","type":"boolean"},"Lua.workspace.userThirdParty":{"default":[],"items":{"type":"string"},"markdownDescription":"Add private third-party library configuration file paths here, please refer to the built-in [configuration file path](https://github.com/LuaLS/lua-language-server/tree/master/meta/3rd)","scope":"resource","type":"array"}},"title":"Lua","type":"object"},"configurationDefaults":{"[lua]":{"editor.quickSuggestions":{"comments":"inline","other":"on","strings":"on"},"editor.semanticHighlighting.enabled":true}},"jsonValidation":[{"fileMatch":[".luarc.json",".luarc.jsonc"],"url":"./setting/schema.json"}],"languages":[{"filenames":[".luarc.json","config.json"],"id":"jsonc"}],"menus":{"editor/context":[{"command":"lua.exportDocument","group":"z_commands","when":"resourceLangId == lua"},{"command":"lua.addon_manager.open","group":"z_commands","when":"resourceLangId == lua"},{"command":"lua.reloadFFIMeta","group":"z_commands","when":"resourceLangId == lua"}]},"semanticTokenScopes":[{"language":"lua","scopes":{"class":["support.class.lua"],"class.declaration":["support.class.lua"],"comment.documentation":["storage.type.annotation.lua"],"event.static":["support.class.lua"],"function":["support.function.any-method.lua"],"function.declaration":["entity.name.function.lua"],"function.defaultLibrary":["support.function.lua"],"function.static":["entity.name.function.lua"],"keyword":["keyword.control.lua"],"keyword.async":["entity.name.tag.lua"],"keyword.declaration":["keyword.local.lua"],"keyword.documentation":["storage.type.annotation.lua"],"keyword.readonly":["constant.language.lua"],"macro":["variable.lua"],"method":["entity.name.function.lua"],"method.declaration":["entity.name.function.lua"],"number":["constant.numeric.float.lua"],"number.static":["constant.numeric.integer.lua"],"operator":["keyword.operator.lua"],"parameter.declaration":["variable.parameter.lua"],"property":["entity.other.attribute.lua"],"property.declaration":["entity.other.property.lua"],"string":["string.lua"],"string.deprecated":["invalid.illegal.character.escape.lua"],"string.modification":["constant.character.escape.lua"],"struct":["string.tag.lua"],"struct.declaration":["string.tag.lua"],"type":["support.type.lua"],"type.modification":["storage.type.generic.lua"],"type.readonly":["storage.type.self.lua"],"typeParameter":["string.tag.lua"],"variable":["variable.other.lua"],"variable.abstract":["variable.other.constant.lua"],"variable.declaration":["variable.other.lua"],"variable.defaultLibrary":["support.constant.lua"],"variable.definition":["variable.language.self.lua"],"variable.global":["variable.global.lua"],"variable.readonly":["variable.other.constant.lua"]}}]},"description":"Lua Language Server coded by Lua","displayName":"Lua","engines":{"vscode":"^1.67.0"},"icon":"images/logo.png","keywords":["Lua","IntelliSense","EmmyLua"],"license":"MIT","main":"./client/out/extension","name":"lua","publisher":"sumneko","repository":{"type":"git","url":"https://github.com/LuaLS/lua-language-server"},"sponsor":{"url":"https://github.com/LuaLS/lua-language-server/issues/484"},"version":"3.7.4"},"location":{"$mid":1,"path":"/home/aexyzk/.vscode-oss/extensions/sumneko.lua-3.7.4-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","metadata":{"id":"3a15b5a7-be12-47e3-8445-88ee3eabc8b2","publisherId":"fb626675-24cf-4881-8c13-b465f29bec2f","publisherDisplayName":"sumneko","targetPlatform":"linux-x64","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1705126626833,"pinned":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"bungcip.better-toml","uuid":"464f4ac7-af65-4aa9-9907-4ba7fa419085"},"manifest":{"name":"better-toml","displayName":"Better TOML","description":"Better TOML Language support","author":"Gigih Aji Ibrahim <bungcip@gmail.com>","icon":"icon.png","version":"0.3.2","publisher":"bungcip","license":"MIT","homepage":"https://github.com/bungcip/better-toml/blob/master/README.md","repository":{"type":"git","url":"https://github.com/bungcip/better-toml.git"},"bugs":{"url":"https://github.com/bungcip/better-toml/issues","email":"bungcip@gmail.com"},"engines":{"vscode":"^1.18.0"},"categories":["Languages"],"keywords":["toml"],"activationEvents":["onLanguage:toml"],"main":"./out/src/extension","contributes":{"languages":[{"id":"toml","aliases":["TOML","toml"],"extensions":[".toml"],"mimetypes":["text/x-toml"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"toml","scopeName":"source.toml","path":"./syntaxes/TOML.tmLanguage"},{"scopeName":"markdown.toml.frontmatter.codeblock","path":"./syntaxes/TOML.frontMatter.tmLanguage","injectTo":["text.html.markdown"]}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"dependencies":{"vscode-languageclient":"^2.6.0","vscode-languageserver":"^2.6.0","toml":"^2.3.3"},"devDependencies":{"typescript":"2.5.2","vscode":"^1.0.3","mocha":"^3.1.2","@types/node":"^6.0.46","@types/mocha":"^2.2.32"}},"location":{"$mid":1,"path":"/home/aexyzk/.vscode-oss/extensions/bungcip.better-toml-0.3.2-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"464f4ac7-af65-4aa9-9907-4ba7fa419085","publisherId":"87bfa971-0ee5-4ec2-afdb-1d26a8959fa4","publisherDisplayName":"bungcip","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1705127954127,"pinned":false,"preRelease":false},"isValid":true,"validations":[]}]}